DIGEST 69b9a3d0682750d32897e9662a9c072b
FLF.Tactics
R698:701 LF.Poly <> <> lib
prf 977:982 <> silly1
R1000:1002 Coq.Init.Datatypes <> nat ind
R1013:1018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1020:1022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1019:1019 LF.Tactics <> n var
R1023:1023 LF.Tactics <> m var
R1009:1011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1008 LF.Tactics <> n var
R1012:1012 LF.Tactics <> m var
prf 1508:1513 <> silly2
R1535:1537 Coq.Init.Datatypes <> nat ind
R1548:1553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1554:1554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1577:1583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1589:1591 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1584:1584 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1586:1586 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1588:1588 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1585:1585 LF.Tactics <> n var
R1587:1587 LF.Tactics <> o var
R1592:1592 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1594:1594 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1596:1596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1593:1593 LF.Tactics <> m var
R1595:1595 LF.Tactics <> p var
R1560:1563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1569:1571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1564:1564 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1566:1566 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1568:1568 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1565:1565 LF.Tactics <> n var
R1567:1567 LF.Tactics <> o var
R1572:1572 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1574:1574 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1576:1576 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1573:1573 LF.Tactics <> m var
R1575:1575 LF.Tactics <> p var
R1556:1558 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1555:1555 LF.Tactics <> n var
R1559:1559 LF.Tactics <> m var
R1544:1546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1543:1543 LF.Tactics <> n var
R1547:1547 LF.Tactics <> m var
prf 2126:2132 <> silly2a
R2150:2152 Coq.Init.Datatypes <> nat ind
R2171:2177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2178:2178 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2225:2231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2235:2237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2232:2232 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2234:2234 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2233:2233 LF.Tactics <> n var
R2238:2238 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2240:2240 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2239:2239 LF.Tactics <> m var
R2193:2195 Coq.Init.Datatypes <> nat ind
R2212:2215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2219:2221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2216:2216 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2218:2218 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2217:2217 LF.Tactics <> q var
R2222:2222 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2224:2224 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2223:2223 LF.Tactics <> r var
R2204:2206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2199:2199 LF.Poly <> :::'('_x_','_x_')' not
R2201:2201 LF.Poly <> :::'('_x_','_x_')' not
R2203:2203 LF.Poly <> :::'('_x_','_x_')' not
R2200:2200 LF.Tactics <> q var
R2202:2202 LF.Tactics <> q var
R2207:2207 LF.Poly <> :::'('_x_','_x_')' not
R2209:2209 LF.Poly <> :::'('_x_','_x_')' not
R2211:2211 LF.Poly <> :::'('_x_','_x_')' not
R2208:2208 LF.Tactics <> r var
R2210:2210 LF.Tactics <> r var
R2163:2165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2158:2158 LF.Poly <> :::'('_x_','_x_')' not
R2160:2160 LF.Poly <> :::'('_x_','_x_')' not
R2162:2162 LF.Poly <> :::'('_x_','_x_')' not
R2159:2159 LF.Tactics <> n var
R2161:2161 LF.Tactics <> n var
R2166:2166 LF.Poly <> :::'('_x_','_x_')' not
R2168:2168 LF.Poly <> :::'('_x_','_x_')' not
R2170:2170 LF.Poly <> :::'('_x_','_x_')' not
R2167:2167 LF.Tactics <> m var
R2169:2169 LF.Tactics <> m var
prf 2439:2446 <> silly_ex
R2462:2462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2508:2514 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2515:2515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2556:2562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2576:2581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2591:2593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2582:2584 LF.Basics <> odd def
R2587:2587 Coq.Init.Datatypes <> S constr
R2589:2589 LF.Tactics <> p var
R2594:2597 LF.Basics <> true constr
R2569:2571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2563:2566 LF.Basics <> even def
R2568:2568 LF.Tactics <> p var
R2572:2575 LF.Basics <> true constr
R2540:2543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2549:2551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2544:2546 LF.Basics <> odd def
R2548:2548 LF.Tactics <> n var
R2552:2555 LF.Basics <> true constr
R2532:2534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2526:2529 LF.Basics <> even def
R2531:2531 LF.Tactics <> n var
R2535:2539 LF.Basics <> false constr
R2486:2489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2500:2502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2490:2493 LF.Basics <> even def
R2496:2496 Coq.Init.Datatypes <> S constr
R2498:2498 LF.Tactics <> n var
R2503:2507 LF.Basics <> false constr
R2479:2481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2473:2476 LF.Basics <> even def
R2478:2478 LF.Tactics <> n var
R2482:2485 LF.Basics <> true constr
prf 2914:2919 <> silly3
R2937:2939 Coq.Init.Datatypes <> nat ind
R2950:2955 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2957:2959 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2956:2956 LF.Tactics <> m var
R2960:2960 LF.Tactics <> n var
R2946:2948 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2945:2945 LF.Tactics <> n var
R2949:2949 LF.Tactics <> m var
prf 3566:3578 <> rev_exercise1
R3597:3600 LF.Poly <> list ind
R3602:3604 Coq.Init.Datatypes <> nat ind
R3620:3625 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3628:3630 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3626:3627 LF.Tactics <> l' var
R3631:3633 LF.Poly <> rev def
R3635:3635 LF.Tactics <> l var
R3611:3613 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3610:3610 LF.Tactics <> l var
R3614:3616 LF.Poly <> rev def
R3618:3619 LF.Tactics <> l' var
R3663:3665 LF.Poly <> rev def
R3696:3709 LF.Poly <> rev_involutive thm
R3696:3709 LF.Poly <> rev_involutive thm
def 4183:4198 <> trans_eq_example
R4224:4226 Coq.Init.Datatypes <> nat ind
R4248:4256 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4270:4278 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4284:4286 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4279:4279 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4281:4281 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4283:4283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4280:4280 LF.Tactics <> a var
R4282:4282 LF.Tactics <> b var
R4287:4287 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4289:4289 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4291:4291 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4288:4288 LF.Tactics <> e var
R4290:4290 LF.Tactics <> f var
R4262:4264 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4257:4257 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4259:4259 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4261:4261 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4258:4258 LF.Tactics <> c var
R4260:4260 LF.Tactics <> d var
R4265:4265 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4267:4267 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4269:4269 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4266:4266 LF.Tactics <> e var
R4268:4268 LF.Tactics <> f var
R4240:4242 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4235:4235 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4237:4237 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4239:4239 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4236:4236 LF.Tactics <> a var
R4238:4238 LF.Tactics <> b var
R4243:4243 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4245:4245 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4247:4247 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4244:4244 LF.Tactics <> c var
R4246:4246 LF.Tactics <> d var
prf 4551:4558 <> trans_eq
R4587:4587 LF.Tactics <> X var
R4598:4601 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4607:4610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4612:4614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4611:4611 LF.Tactics <> n var
R4615:4615 LF.Tactics <> o var
R4603:4605 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4602:4602 LF.Tactics <> m var
R4606:4606 LF.Tactics <> o var
R4594:4596 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4593:4593 LF.Tactics <> n var
R4597:4597 LF.Tactics <> m var
def 4870:4886 <> trans_eq_example'
R4912:4914 Coq.Init.Datatypes <> nat ind
R4936:4944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4958:4966 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4972:4974 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4967:4967 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4969:4969 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4971:4971 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4968:4968 LF.Tactics <> a var
R4970:4970 LF.Tactics <> b var
R4975:4975 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4977:4977 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4979:4979 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4976:4976 LF.Tactics <> e var
R4978:4978 LF.Tactics <> f var
R4950:4952 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4945:4945 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4947:4947 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4949:4949 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4946:4946 LF.Tactics <> c var
R4948:4948 LF.Tactics <> d var
R4953:4953 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4955:4955 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4957:4957 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4954:4954 LF.Tactics <> e var
R4956:4956 LF.Tactics <> f var
R4928:4930 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4923:4923 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4925:4925 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4927:4927 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4924:4924 LF.Tactics <> a var
R4926:4926 LF.Tactics <> b var
R4931:4931 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4933:4933 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4935:4935 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4932:4932 LF.Tactics <> c var
R4934:4934 LF.Tactics <> d var
R5452:5452 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5454:5454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5456:5456 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5434:5441 LF.Tactics <> trans_eq thm
R5452:5452 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5454:5454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5456:5456 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5434:5441 LF.Tactics <> trans_eq thm
def 5936:5953 <> trans_eq_example''
R5979:5981 Coq.Init.Datatypes <> nat ind
R6003:6011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6025:6033 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6039:6041 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6034:6034 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6036:6036 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6038:6038 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6035:6035 LF.Tactics <> a var
R6037:6037 LF.Tactics <> b var
R6042:6042 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6044:6044 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6046:6046 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6043:6043 LF.Tactics <> e var
R6045:6045 LF.Tactics <> f var
R6017:6019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6012:6012 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6014:6014 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6016:6016 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6013:6013 LF.Tactics <> c var
R6015:6015 LF.Tactics <> d var
R6020:6020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6022:6022 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6024:6024 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6021:6021 LF.Tactics <> e var
R6023:6023 LF.Tactics <> f var
R5995:5997 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5990:5990 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5992:5992 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5994:5994 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5991:5991 LF.Tactics <> a var
R5993:5993 LF.Tactics <> b var
R5998:5998 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6000:6000 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6002:6002 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5999:5999 LF.Tactics <> c var
R6001:6001 LF.Tactics <> d var
R6101:6101 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6103:6103 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6105:6105 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6101:6101 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6103:6103 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6105:6105 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6223:6239 <> trans_eq_exercise
R6261:6263 Coq.Init.Datatypes <> nat ind
R6288:6296 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6308:6316 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6317:6317 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6323:6327 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6338:6338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6319:6321 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6318:6318 LF.Tactics <> n var
R6322:6322 LF.Tactics <> p var
R6328:6335 LF.Basics <> minustwo def
R6337:6337 LF.Tactics <> o var
R6297:6297 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6303:6306 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6299:6301 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6298:6298 LF.Tactics <> n var
R6302:6302 LF.Tactics <> p var
R6307:6307 LF.Tactics <> m var
R6273:6276 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6287:6287 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6272:6272 LF.Tactics <> m var
R6277:6284 LF.Basics <> minustwo def
R6286:6286 LF.Tactics <> o var
prf 7722:7732 <> S_injective
R7750:7752 Coq.Init.Datatypes <> nat ind
R7767:7772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7774:7776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7773:7773 LF.Tactics <> n var
R7777:7777 LF.Tactics <> m var
R7761:7763 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7758:7758 Coq.Init.Datatypes <> S constr
R7760:7760 LF.Tactics <> n var
R7764:7764 Coq.Init.Datatypes <> S constr
R7766:7766 LF.Tactics <> m var
R7819:7821 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7822:7825 Coq.Init.Peano <> pred syndef
R7828:7828 Coq.Init.Datatypes <> S constr
R7819:7821 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7822:7825 Coq.Init.Peano <> pred syndef
R7828:7828 Coq.Init.Datatypes <> S constr
prf 8317:8328 <> S_injective'
R8346:8348 Coq.Init.Datatypes <> nat ind
R8363:8368 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8370:8372 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8369:8369 LF.Tactics <> n var
R8373:8373 LF.Tactics <> m var
R8357:8359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8354:8354 Coq.Init.Datatypes <> S constr
R8356:8356 LF.Tactics <> n var
R8360:8360 Coq.Init.Datatypes <> S constr
R8362:8362 LF.Tactics <> m var
prf 8884:8896 <> injection_ex1
R8916:8918 Coq.Init.Datatypes <> nat ind
R8937:8942 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8944:8946 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8943:8943 LF.Tactics <> n var
R8947:8947 LF.Tactics <> m var
R8929:8931 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8924:8924 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8926:8926 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8928:8928 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8925:8925 LF.Tactics <> n var
R8927:8927 LF.Tactics <> m var
R8932:8932 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8934:8934 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8936:8936 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8933:8933 LF.Tactics <> o var
R8935:8935 LF.Tactics <> o var
def 9132:9144 <> injection_ex3
R9175:9175 LF.Tactics <> X var
R9185:9188 LF.Poly <> list ind
R9190:9190 LF.Tactics <> X var
R9216:9221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9232:9237 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9239:9241 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9238:9238 LF.Tactics <> x var
R9242:9242 LF.Tactics <> y var
R9223:9225 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9222:9222 LF.Tactics <> j var
R9227:9230 LF.Poly <> :::x_'::'_x not
R9226:9226 LF.Tactics <> z var
R9231:9231 LF.Tactics <> l var
R9207:9209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9197:9200 LF.Poly <> :::x_'::'_x not
R9196:9196 LF.Tactics <> x var
R9202:9205 LF.Poly <> :::x_'::'_x not
R9201:9201 LF.Tactics <> y var
R9206:9206 LF.Tactics <> l var
R9211:9214 LF.Poly <> :::x_'::'_x not
R9210:9210 LF.Tactics <> z var
R9215:9215 LF.Tactics <> j var
prf 10088:10103 <> discriminate_ex1
R10121:10123 Coq.Init.Datatypes <> nat ind
R10141:10146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10148:10150 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10147:10147 LF.Tactics <> n var
R10151:10151 LF.Tactics <> m var
R10134:10136 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10129:10133 LF.Basics <> false constr
R10137:10140 LF.Basics <> true constr
prf 10217:10232 <> discriminate_ex2
R10248:10250 Coq.Init.Datatypes <> nat ind
R10263:10268 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10274:10276 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10270:10272 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R10259:10261 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10256:10256 Coq.Init.Datatypes <> S constr
R10258:10258 LF.Tactics <> n var
R10262:10262 Coq.Init.Datatypes <> O constr
def 11101:11116 <> discriminate_ex3
R11149:11149 LF.Tactics <> X var
R11159:11162 LF.Poly <> list ind
R11164:11164 LF.Tactics <> X var
R11188:11195 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11197:11199 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11196:11196 LF.Tactics <> x var
R11200:11200 LF.Tactics <> z var
R11183:11185 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11173:11176 LF.Poly <> :::x_'::'_x not
R11172:11172 LF.Tactics <> x var
R11178:11181 LF.Poly <> :::x_'::'_x not
R11177:11177 LF.Tactics <> y var
R11182:11182 LF.Tactics <> l var
R11186:11187 LF.Poly <> :::'['_']' not
prf 11441:11447 <> eqb_0_l
R11477:11480 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11482:11484 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11481:11481 LF.Tactics <> n var
R11470:11472 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11465:11468 LF.Basics <> ::nat_scope:x_'=?'_x not
R11469:11469 LF.Tactics <> n var
R11473:11476 LF.Basics <> true constr
prf 12445:12451 <> f_equal
R12480:12483 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12484:12484 LF.Tactics <> B var
R12479:12479 LF.Tactics <> A var
R12493:12493 LF.Tactics <> A var
R12504:12507 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12511:12513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12508:12508 LF.Tactics <> f var
R12510:12510 LF.Tactics <> x var
R12514:12514 LF.Tactics <> f var
R12516:12516 LF.Tactics <> y var
R12500:12502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12499:12499 LF.Tactics <> x var
R12503:12503 LF.Tactics <> y var
prf 12588:12608 <> eq_implies_succ_equal
R12626:12628 Coq.Init.Datatypes <> nat ind
R12639:12642 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12646:12648 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12643:12643 Coq.Init.Datatypes <> S constr
R12645:12645 LF.Tactics <> n var
R12649:12649 Coq.Init.Datatypes <> S constr
R12651:12651 LF.Tactics <> m var
R12635:12637 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12634:12634 LF.Tactics <> n var
R12638:12638 LF.Tactics <> m var
R12681:12687 LF.Tactics <> f_equal thm
R12681:12687 LF.Tactics <> f_equal thm
prf 13121:13142 <> eq_implies_succ_equal'
R13160:13162 Coq.Init.Datatypes <> nat ind
R13173:13176 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13180:13182 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13177:13177 Coq.Init.Datatypes <> S constr
R13179:13179 LF.Tactics <> n var
R13183:13183 Coq.Init.Datatypes <> S constr
R13185:13185 LF.Tactics <> m var
R13169:13171 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13168:13168 LF.Tactics <> n var
R13172:13172 LF.Tactics <> m var
prf 13668:13672 <> S_inj
R13690:13692 Coq.Init.Datatypes <> nat ind
R13700:13703 LF.Basics <> bool ind
R13729:13735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13736:13736 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13743:13746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13738:13741 LF.Basics <> ::nat_scope:x_'=?'_x not
R13737:13737 LF.Tactics <> n var
R13742:13742 LF.Tactics <> m var
R13747:13747 LF.Tactics <> b var
R13709:13709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13724:13727 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13710:13710 LF.Basics <> ::nat_scope:x_'=?'_x not
R13714:13719 LF.Basics <> ::nat_scope:x_'=?'_x not
R13723:13723 LF.Basics <> ::nat_scope:x_'=?'_x not
R13711:13711 Coq.Init.Datatypes <> S constr
R13713:13713 LF.Tactics <> n var
R13720:13720 Coq.Init.Datatypes <> S constr
R13722:13722 LF.Tactics <> m var
R13728:13728 LF.Tactics <> b var
prf 14578:14583 <> silly4
R14605:14607 Coq.Init.Datatypes <> nat ind
R14613:14613 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14628:14634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14640:14645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14647:14649 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14646:14646 LF.Tactics <> q var
R14650:14650 LF.Tactics <> p var
R14636:14638 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14635:14635 LF.Tactics <> m var
R14639:14639 LF.Tactics <> n var
R14619:14622 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14624:14626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14623:14623 LF.Tactics <> p var
R14627:14627 LF.Tactics <> q var
R14615:14617 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14614:14614 LF.Tactics <> n var
R14618:14618 LF.Tactics <> m var
prf 16273:16295 <> double_injective_FAILED
R16332:16337 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16339:16341 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16338:16338 LF.Tactics <> n var
R16342:16342 LF.Tactics <> m var
R16321:16323 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16313:16318 LF.Induction <> double def
R16320:16320 LF.Tactics <> n var
R16324:16329 LF.Induction <> double def
R16331:16331 LF.Tactics <> m var
R16515:16520 LF.Induction <> double def
R16923:16929 LF.Tactics <> f_equal thm
R16923:16929 LF.Tactics <> f_equal thm
prf 19246:19261 <> double_injective
R19298:19303 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19305:19307 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19304:19304 LF.Tactics <> n var
R19308:19308 LF.Tactics <> m var
R19287:19289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19279:19284 LF.Induction <> double def
R19286:19286 LF.Tactics <> n var
R19290:19295 LF.Induction <> double def
R19297:19297 LF.Tactics <> m var
R20192:20198 LF.Tactics <> f_equal thm
R20192:20198 LF.Tactics <> f_equal thm
prf 21228:21235 <> eqb_true
R21266:21269 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21271:21273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21270:21270 LF.Tactics <> n var
R21274:21274 LF.Tactics <> m var
R21259:21261 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21254:21257 LF.Basics <> ::nat_scope:x_'=?'_x not
R21253:21253 LF.Tactics <> n var
R21258:21258 LF.Tactics <> m var
R21262:21265 LF.Basics <> true constr
R21525:21531 LF.Tactics <> f_equal thm
R21525:21531 LF.Tactics <> f_equal thm
def 21864:21894 <> manual_grade_for_informal_proof
R21898:21903 Coq.Init.Datatypes <> option ind
R21909:21909 LF.Poly <> ::type_scope:x_'*'_x not
R21906:21908 Coq.Init.Datatypes <> nat ind
R21910:21915 Coq.Strings.String <> string ind
R21921:21924 Coq.Init.Datatypes <> None constr
prf 22162:22179 <> plus_n_n_injective
R22210:22215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22217:22219 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22216:22216 LF.Tactics <> n var
R22220:22220 LF.Tactics <> m var
R22202:22204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22198:22200 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R22197:22197 LF.Tactics <> n var
R22201:22201 LF.Tactics <> n var
R22206:22208 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R22205:22205 LF.Tactics <> m var
R22209:22209 LF.Tactics <> m var
R22388:22396 LF.Induction <> plus_n_Sm prfax
R22388:22396 LF.Induction <> plus_n_Sm prfax
R22388:22396 LF.Induction <> plus_n_Sm prfax
R22469:22477 LF.Induction <> plus_n_Sm prfax
R22469:22477 LF.Induction <> plus_n_Sm prfax
R22469:22477 LF.Induction <> plus_n_Sm prfax
R22531:22537 LF.Tactics <> f_equal thm
R22531:22537 LF.Tactics <> f_equal thm
prf 22885:22913 <> double_injective_take2_FAILED
R22950:22955 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22957:22959 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22956:22956 LF.Tactics <> n var
R22960:22960 LF.Tactics <> m var
R22939:22941 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22931:22936 LF.Induction <> double def
R22938:22938 LF.Tactics <> n var
R22942:22947 LF.Induction <> double def
R22949:22949 LF.Tactics <> m var
R23263:23269 LF.Tactics <> f_equal thm
R23263:23269 LF.Tactics <> f_equal thm
prf 24210:24231 <> double_injective_take2
R24268:24273 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24275:24277 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24274:24274 LF.Tactics <> n var
R24278:24278 LF.Tactics <> m var
R24257:24259 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24249:24254 LF.Induction <> double def
R24256:24256 LF.Tactics <> n var
R24260:24265 LF.Induction <> double def
R24267:24267 LF.Tactics <> m var
R24764:24770 LF.Tactics <> f_equal thm
R24764:24770 LF.Tactics <> f_equal thm
prf 26896:26915 <> nth_error_after_last
R26930:26932 Coq.Init.Datatypes <> nat ind
R26951:26954 LF.Poly <> list ind
R26956:26956 LF.Tactics <> X var
R26974:26979 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26993:26995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26980:26988 LF.Poly <> nth_error def
R26992:26992 LF.Tactics <> n var
R26990:26990 LF.Tactics <> l var
R26996:26999 Coq.Init.Datatypes <> None constr
R26970:26972 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26962:26967 LF.Poly <> length def
R26969:26969 LF.Tactics <> l var
R26973:26973 LF.Tactics <> n var
def 27574:27579 <> square
R27587:27589 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27586:27586 LF.Tactics <> n var
R27590:27590 LF.Tactics <> n var
prf 27661:27671 <> square_mult
R27701:27703 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27687:27692 LF.Tactics <> square def
R27696:27698 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27695:27695 LF.Tactics <> n var
R27699:27699 LF.Tactics <> m var
R27712:27714 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27704:27709 LF.Tactics <> square def
R27711:27711 LF.Tactics <> n var
R27715:27720 LF.Tactics <> square def
R27722:27722 LF.Tactics <> m var
R28037:28042 LF.Tactics <> square def
R28361:28370 LF.Induction <> mult_assoc prfax
R28361:28370 LF.Induction <> mult_assoc prfax
R28361:28370 LF.Induction <> mult_assoc prfax
R28396:28398 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28392:28394 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28388:28390 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28404:28406 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28400:28402 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28396:28398 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28392:28394 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28388:28390 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28404:28406 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28400:28402 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28425:28432 LF.Induction <> mul_comm prfax
R28425:28432 LF.Induction <> mul_comm prfax
R28425:28432 LF.Induction <> mul_comm prfax
R28441:28450 LF.Induction <> mult_assoc prfax
R28441:28450 LF.Induction <> mult_assoc prfax
R28476:28485 LF.Induction <> mult_assoc prfax
R28476:28485 LF.Induction <> mult_assoc prfax
R28476:28485 LF.Induction <> mult_assoc prfax
def 28871:28873 <> foo
R28879:28881 Coq.Init.Datatypes <> nat ind
prf 29103:29114 <> silly_fact_1
R29137:29139 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29133:29135 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29128:29130 LF.Tactics <> foo def
R29132:29132 LF.Tactics <> m var
R29151:29153 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29140:29142 LF.Tactics <> foo def
R29146:29148 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29145:29145 LF.Tactics <> m var
def 29381:29383 <> bar
R29398:29398 LF.Tactics <> x var
R29409:29409 Coq.Init.Datatypes <> O constr
R29420:29420 Coq.Init.Datatypes <> S constr
prf 29494:29512 <> silly_fact_2_FAILED
R29535:29537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29531:29533 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29526:29528 LF.Tactics <> bar def
R29530:29530 LF.Tactics <> m var
R29549:29551 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29538:29540 LF.Tactics <> bar def
R29544:29546 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29543:29543 LF.Tactics <> m var
prf 30538:30549 <> silly_fact_2
R30572:30574 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30568:30570 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30563:30565 LF.Tactics <> bar def
R30567:30567 LF.Tactics <> m var
R30586:30588 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30575:30577 LF.Tactics <> bar def
R30581:30583 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30580:30580 LF.Tactics <> m var
prf 30936:30948 <> silly_fact_2'
R30971:30973 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30967:30969 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30962:30964 LF.Tactics <> bar def
R30966:30966 LF.Tactics <> m var
R30985:30987 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30974:30976 LF.Tactics <> bar def
R30980:30982 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30979:30979 LF.Tactics <> m var
R31019:31021 LF.Tactics <> bar def
def 31667:31674 <> sillyfun
R31681:31683 Coq.Init.Datatypes <> nat ind
R31688:31691 LF.Basics <> bool ind
R31702:31705 LF.Basics <> ::nat_scope:x_'=?'_x not
R31701:31701 LF.Tactics <> n var
R31730:31733 LF.Basics <> ::nat_scope:x_'=?'_x not
R31729:31729 LF.Tactics <> n var
R31754:31758 LF.Basics <> false constr
R31741:31745 LF.Basics <> false constr
R31713:31717 LF.Basics <> false constr
prf 31770:31783 <> sillyfun_false
R31799:31801 Coq.Init.Datatypes <> nat ind
R31817:31819 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31807:31814 LF.Tactics <> sillyfun def
R31816:31816 LF.Tactics <> n var
R31820:31824 LF.Basics <> false constr
R31853:31860 LF.Tactics <> sillyfun def
R31876:31879 LF.Basics <> ::nat_scope:x_'=?'_x not
R31876:31879 LF.Basics <> ::nat_scope:x_'=?'_x not
R31968:31971 LF.Basics <> ::nat_scope:x_'=?'_x not
R31968:31971 LF.Basics <> ::nat_scope:x_'=?'_x not
def 32844:32848 <> split
R32868:32871 LF.Poly <> list ind
R32875:32875 LF.Poly <> ::type_scope:x_'*'_x not
R32874:32874 LF.Tactics <> X var
R32876:32876 LF.Tactics <> Y var
R32897:32897 LF.Poly <> ::type_scope:x_'*'_x not
R32904:32908 LF.Poly <> ::type_scope:x_'*'_x not
R32915:32915 LF.Poly <> ::type_scope:x_'*'_x not
R32898:32901 LF.Poly <> list ind
R32903:32903 LF.Tactics <> X var
R32909:32912 LF.Poly <> list ind
R32914:32914 LF.Tactics <> Y var
R32928:32928 LF.Tactics <> l var
R32939:32940 LF.Poly <> :::'['_']' not
R32945:32945 LF.Poly <> :::'('_x_','_x_')' not
R32948:32949 LF.Poly <> :::'('_x_','_x_')' not
R32952:32952 LF.Poly <> :::'('_x_','_x_')' not
R32946:32947 LF.Poly <> :::'['_']' not
R32950:32951 LF.Poly <> :::'['_']' not
R32964:32967 LF.Poly <> :::x_'::'_x not
R32958:32958 LF.Poly <> :::'('_x_','_x_')' not
R32960:32961 LF.Poly <> :::'('_x_','_x_')' not
R32963:32963 LF.Poly <> :::'('_x_','_x_')' not
R32985:32989 LF.Tactics <> split def
R33006:33006 LF.Poly <> :::'('_x_','_x_')' not
R33009:33010 LF.Poly <> :::'('_x_','_x_')' not
R33013:33013 LF.Poly <> :::'('_x_','_x_')' not
R33018:33018 LF.Poly <> :::'('_x_','_x_')' not
R33026:33027 LF.Poly <> :::'('_x_','_x_')' not
R33035:33035 LF.Poly <> :::'('_x_','_x_')' not
R33020:33023 LF.Poly <> :::x_'::'_x not
R33029:33032 LF.Poly <> :::x_'::'_x not
prf 33145:33157 <> combine_split
R33177:33180 LF.Poly <> list ind
R33184:33186 LF.Poly <> ::type_scope:x_'*'_x not
R33183:33183 LF.Tactics <> X var
R33187:33187 LF.Tactics <> Y var
R33218:33223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33237:33239 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33224:33230 LF.Poly <> combine def
R33235:33236 LF.Tactics <> l2 var
R33232:33233 LF.Tactics <> l1 var
R33240:33240 LF.Tactics <> l var
R33207:33209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33200:33204 LF.Tactics <> split def
R33206:33206 LF.Tactics <> l var
R33210:33210 LF.Poly <> :::'('_x_','_x_')' not
R33213:33214 LF.Poly <> :::'('_x_','_x_')' not
R33217:33217 LF.Poly <> :::'('_x_','_x_')' not
R33211:33212 LF.Tactics <> l1 var
R33215:33216 LF.Tactics <> l2 var
R33477:33481 LF.Tactics <> split def
R33477:33481 LF.Tactics <> split def
R33865:33867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33857:33857 LF.Poly <> :::'('_x_','_x_')' not
R33860:33861 LF.Poly <> :::'('_x_','_x_')' not
R33864:33864 LF.Poly <> :::'('_x_','_x_')' not
R33868:33868 LF.Poly <> :::'('_x_','_x_')' not
R33871:33872 LF.Poly <> :::'('_x_','_x_')' not
R33875:33875 LF.Poly <> :::'('_x_','_x_')' not
R33865:33867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33857:33857 LF.Poly <> :::'('_x_','_x_')' not
R33860:33861 LF.Poly <> :::'('_x_','_x_')' not
R33864:33864 LF.Poly <> :::'('_x_','_x_')' not
R33868:33868 LF.Poly <> :::'('_x_','_x_')' not
R33871:33872 LF.Poly <> :::'('_x_','_x_')' not
R33875:33875 LF.Poly <> :::'('_x_','_x_')' not
def 34598:34606 <> sillyfun1
R34613:34615 Coq.Init.Datatypes <> nat ind
R34620:34623 LF.Basics <> bool ind
R34634:34637 LF.Basics <> ::nat_scope:x_'=?'_x not
R34633:34633 LF.Tactics <> n var
R34661:34664 LF.Basics <> ::nat_scope:x_'=?'_x not
R34660:34660 LF.Tactics <> n var
R34684:34688 LF.Basics <> false constr
R34672:34675 LF.Basics <> true constr
R34645:34648 LF.Basics <> true constr
prf 34940:34959 <> sillyfun1_odd_FAILED
R34975:34977 Coq.Init.Datatypes <> nat ind
R35001:35006 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35012:35014 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35007:35009 LF.Basics <> odd def
R35011:35011 LF.Tactics <> n var
R35015:35018 LF.Basics <> true constr
R34994:34996 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34983:34991 LF.Tactics <> sillyfun1 def
R34993:34993 LF.Tactics <> n var
R34997:35000 LF.Basics <> true constr
R35050:35058 LF.Tactics <> sillyfun1 def
R35080:35083 LF.Basics <> ::nat_scope:x_'=?'_x not
R35080:35083 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 35885:35897 <> sillyfun1_odd
R35913:35915 Coq.Init.Datatypes <> nat ind
R35939:35944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35950:35952 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35945:35947 LF.Basics <> odd def
R35949:35949 LF.Tactics <> n var
R35953:35956 LF.Basics <> true constr
R35932:35934 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35921:35929 LF.Tactics <> sillyfun1 def
R35931:35931 LF.Tactics <> n var
R35935:35938 LF.Basics <> true constr
R35988:35996 LF.Tactics <> sillyfun1 def
R36018:36021 LF.Basics <> ::nat_scope:x_'=?'_x not
R36018:36021 LF.Basics <> ::nat_scope:x_'=?'_x not
R36268:36275 LF.Tactics <> eqb_true thm
R36268:36275 LF.Tactics <> eqb_true thm
R36567:36570 LF.Basics <> ::nat_scope:x_'=?'_x not
R36567:36570 LF.Basics <> ::nat_scope:x_'=?'_x not
R36627:36634 LF.Tactics <> eqb_true thm
R36627:36634 LF.Tactics <> eqb_true thm
prf 37039:37060 <> bool_fn_applied_thrice
R37082:37085 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37086:37089 LF.Basics <> bool ind
R37078:37081 LF.Basics <> bool ind
R37097:37100 LF.Basics <> bool ind
R37117:37119 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37106:37106 LF.Tactics <> f var
R37109:37109 LF.Tactics <> f var
R37112:37112 LF.Tactics <> f var
R37114:37114 LF.Tactics <> b var
R37120:37120 LF.Tactics <> f var
R37122:37122 LF.Tactics <> b var
R37172:37175 LF.Basics <> true constr
R37172:37175 LF.Basics <> true constr
R37198:37202 LF.Basics <> false constr
R37198:37202 LF.Basics <> false constr
R37281:37285 LF.Basics <> false constr
R37281:37285 LF.Basics <> false constr
R37346:37350 LF.Basics <> false constr
R37346:37350 LF.Basics <> false constr
R37373:37376 LF.Basics <> true constr
R37373:37376 LF.Basics <> true constr
prf 40099:40105 <> eqb_sym
R40123:40125 Coq.Init.Datatypes <> nat ind
R40131:40131 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40138:40142 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40149:40149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40133:40136 LF.Basics <> ::nat_scope:x_'=?'_x not
R40132:40132 LF.Tactics <> n var
R40137:40137 LF.Tactics <> m var
R40144:40147 LF.Basics <> ::nat_scope:x_'=?'_x not
R40143:40143 LF.Tactics <> m var
R40148:40148 LF.Tactics <> n var
prf 40720:40728 <> eqb_trans
R40761:40766 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40780:40785 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40792:40794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40787:40790 LF.Basics <> ::nat_scope:x_'=?'_x not
R40786:40786 LF.Tactics <> n var
R40791:40791 LF.Tactics <> p var
R40795:40798 LF.Basics <> true constr
R40773:40775 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40768:40771 LF.Basics <> ::nat_scope:x_'=?'_x not
R40767:40767 LF.Tactics <> m var
R40772:40772 LF.Tactics <> p var
R40776:40779 LF.Basics <> true constr
R40754:40756 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40749:40752 LF.Basics <> ::nat_scope:x_'=?'_x not
R40748:40748 LF.Tactics <> n var
R40753:40753 LF.Tactics <> m var
R40757:40760 LF.Basics <> true constr
R41015:41022 LF.Tactics <> eqb_true thm
R41015:41022 LF.Tactics <> eqb_true thm
def 41592:41614 <> split_combine_statement
R41744:41747 LF.Poly <> list ind
R41751:41753 LF.Poly <> ::type_scope:x_'*'_x not
R41750:41750 LF.Tactics <> X var
R41754:41754 LF.Tactics <> Y var
R41796:41798 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41759:41765 LF.Poly <> combine def
R41783:41785 LF.Poly <> snd def
R41787:41791 LF.Tactics <> split def
R41793:41793 LF.Tactics <> l var
R41768:41770 LF.Poly <> fst def
R41772:41776 LF.Tactics <> split def
R41778:41778 LF.Tactics <> l var
R41799:41799 LF.Tactics <> l var
prf 41811:41823 <> split_combine
R41827:41849 LF.Tactics <> split_combine_statement def
R41868:41890 LF.Tactics <> split_combine_statement def
R41983:41987 LF.Tactics <> split def
R41983:41987 LF.Tactics <> split def
def 42099:42128 <> manual_grade_for_split_combine
R42132:42137 Coq.Init.Datatypes <> option ind
R42143:42143 LF.Poly <> ::type_scope:x_'*'_x not
R42140:42142 Coq.Init.Datatypes <> nat ind
R42144:42149 Coq.Strings.String <> string ind
R42155:42158 Coq.Init.Datatypes <> None constr
prf 42238:42252 <> filter_exercise
R42283:42286 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42287:42290 LF.Basics <> bool ind
R42282:42282 LF.Tactics <> X var
R42331:42331 LF.Tactics <> X var
R42342:42345 LF.Poly <> list ind
R42347:42347 LF.Tactics <> X var
R42376:42381 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42388:42390 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42382:42385 LF.Tactics <> test var
R42387:42387 LF.Tactics <> x var
R42391:42394 LF.Basics <> true constr
R42366:42368 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42353:42358 LF.Poly <> filter def
R42365:42365 LF.Tactics <> l var
R42360:42363 LF.Tactics <> test var
R42370:42373 LF.Poly <> :::x_'::'_x not
R42369:42369 LF.Tactics <> x var
R42374:42375 LF.Tactics <> lf var
def 43605:43611 <> forallb
R43633:43636 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43637:43640 LF.Basics <> bool ind
R43632:43632 LF.Tactics <> X var
R43648:43651 LF.Poly <> list ind
R43653:43653 LF.Tactics <> X var
R43658:43661 LF.Basics <> bool ind
R43674:43674 LF.Tactics <> l var
R43685:43687 LF.Poly <> nil constr
R43692:43695 LF.Basics <> true constr
R43702:43705 LF.Poly <> :::x_'::'_x not
R43718:43721 LF.Tactics <> test var
R43747:43750 LF.Basics <> true constr
R43755:43761 LF.Tactics <> forallb def
R43763:43766 LF.Tactics <> test var
R43786:43790 LF.Basics <> false constr
R43795:43799 LF.Basics <> false constr
def 43835:43848 <> test_forallb_1
R43875:43877 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43852:43858 LF.Tactics <> forallb def
R43864:43864 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43866:43866 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43868:43868 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43870:43870 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43872:43872 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43874:43874 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43860:43862 LF.Basics <> odd def
R43878:43881 LF.Basics <> true constr
def 43929:43942 <> test_forallb_2
R43972:43974 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43946:43952 LF.Tactics <> forallb def
R43959:43959 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43965:43965 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43971:43971 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43960:43964 LF.Basics <> false constr
R43966:43970 LF.Basics <> false constr
R43954:43957 LF.Basics <> negb def
R43975:43978 LF.Basics <> true constr
def 44026:44039 <> test_forallb_3
R44065:44067 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44043:44049 LF.Tactics <> forallb def
R44056:44056 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44058:44058 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44060:44060 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44062:44062 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44064:44064 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44051:44054 LF.Basics <> even def
R44068:44072 LF.Basics <> false constr
def 44120:44133 <> test_forallb_4
R44155:44157 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44137:44143 LF.Tactics <> forallb def
R44153:44154 LF.Poly <> :::'['_']' not
R44146:44148 LF.Basics <> eqb def
R44158:44161 LF.Basics <> true constr
def 44210:44216 <> existsb
R44238:44241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44242:44245 LF.Basics <> bool ind
R44237:44237 LF.Tactics <> X var
R44253:44256 LF.Poly <> list ind
R44258:44258 LF.Tactics <> X var
R44263:44266 LF.Basics <> bool ind
R44279:44279 LF.Tactics <> l var
R44290:44292 LF.Poly <> nil constr
R44297:44301 LF.Basics <> false constr
R44308:44311 LF.Poly <> :::x_'::'_x not
R44324:44327 LF.Tactics <> test var
R44353:44356 LF.Basics <> true constr
R44361:44364 LF.Basics <> true constr
R44382:44386 LF.Basics <> false constr
R44391:44397 LF.Tactics <> existsb def
R44399:44402 LF.Tactics <> test var
def 44440:44453 <> test_existsb_1
R44482:44484 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44457:44463 LF.Tactics <> existsb def
R44473:44473 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44475:44475 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44477:44477 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44479:44479 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44481:44481 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44466:44468 LF.Basics <> eqb def
R44485:44489 LF.Basics <> false constr
def 44537:44550 <> test_existsb_2
R44591:44593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44554:44560 LF.Tactics <> existsb def
R44574:44574 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44579:44579 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44584:44584 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44590:44590 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44575:44578 LF.Basics <> true constr
R44580:44583 LF.Basics <> true constr
R44585:44589 LF.Basics <> false constr
R44563:44566 LF.Basics <> andb def
R44568:44571 LF.Basics <> true constr
R44594:44597 LF.Basics <> true constr
def 44645:44658 <> test_existsb_3
R44687:44689 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44662:44668 LF.Tactics <> existsb def
R44674:44674 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44676:44676 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44678:44678 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44680:44680 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44682:44682 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44684:44684 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44686:44686 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44670:44672 LF.Basics <> odd def
R44690:44693 LF.Basics <> true constr
def 44741:44754 <> test_existsb_4
R44773:44775 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44758:44764 LF.Tactics <> existsb def
R44771:44772 LF.Poly <> :::'['_']' not
R44766:44769 LF.Basics <> even def
R44776:44780 LF.Basics <> false constr
def 44831:44838 <> existsb'
R44860:44863 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44864:44867 LF.Basics <> bool ind
R44859:44859 LF.Tactics <> X var
R44875:44878 LF.Poly <> list ind
R44880:44880 LF.Tactics <> X var
R44885:44888 LF.Basics <> bool ind
R44895:44898 LF.Basics <> negb def
R44901:44907 LF.Tactics <> forallb def
R44934:44934 LF.Tactics <> l var
R44919:44922 LF.Basics <> negb def
R44925:44928 LF.Tactics <> test var
R44930:44930 LF.Tactics <> x var
prf 44947:44962 <> existsb_existsb'
R44993:44996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44997:45000 LF.Basics <> bool ind
R44992:44992 LF.Tactics <> X var
R45008:45011 LF.Poly <> list ind
R45013:45013 LF.Tactics <> X var
R45033:45035 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45019:45025 LF.Tactics <> existsb def
R45032:45032 LF.Tactics <> l var
R45027:45030 LF.Tactics <> test var
R45036:45043 LF.Tactics <> existsb' def
R45050:45050 LF.Tactics <> l var
R45045:45048 LF.Tactics <> test var
R45111:45118 LF.Tactics <> existsb' def
R45159:45166 LF.Tactics <> existsb' def
R45266:45273 LF.Tactics <> existsb' def
