DIGEST efedfb1c6982347cbd6170549fb2b883
FLF.Poly
R322:326 LF.Lists <> <> lib
ind 1183:1190 <> boollist
constr 1206:1213 <> bool_nil
constr 1219:1227 <> bool_cons
R1214:1214 LF.Poly <> boollist ind
R1234:1237 LF.Basics <> bool ind
R1245:1252 LF.Poly <> boollist ind
R1254:1254 LF.Poly <> boollist ind
ind 1790:1793 <> list
constr 1818:1820 <> nil
constr 1826:1829 <> cons
R1821:1821 LF.Poly <> list ind
R1821:1821 LF.Poly <> X var
R1836:1836 LF.Poly <> X var
R1844:1847 LF.Poly <> list ind
R1849:1849 LF.Poly <> X var
R1851:1851 LF.Poly <> list ind
R1851:1851 LF.Poly <> X var
R2722:2725 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2711:2714 LF.Poly <> list ind
R3183:3186 LF.Poly <> list ind
R3188:3190 Coq.Init.Datatypes <> nat ind
R3172:3174 LF.Poly <> nil constr
R3176:3178 Coq.Init.Datatypes <> nat ind
R3398:3401 LF.Poly <> list ind
R3403:3405 Coq.Init.Datatypes <> nat ind
R3374:3377 LF.Poly <> cons constr
R3386:3388 LF.Poly <> nil constr
R3390:3392 Coq.Init.Datatypes <> nat ind
R3379:3381 Coq.Init.Datatypes <> nat ind
R3931:3934 LF.Poly <> list ind
R3936:3936 LF.Poly <> X var
R3908:3910 LF.Poly <> nil constr
R4280:4283 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4290:4293 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4294:4297 LF.Poly <> list ind
R4299:4299 LF.Poly <> X var
R4284:4287 LF.Poly <> list ind
R4289:4289 LF.Poly <> X var
R4279:4279 LF.Poly <> X var
R4255:4258 LF.Poly <> cons constr
R5145:5148 LF.Poly <> list ind
R5150:5152 Coq.Init.Datatypes <> nat ind
R5102:5105 LF.Poly <> cons constr
R5114:5117 LF.Poly <> cons constr
R5126:5128 LF.Poly <> nil constr
R5130:5132 Coq.Init.Datatypes <> nat ind
R5119:5121 Coq.Init.Datatypes <> nat ind
R5107:5109 Coq.Init.Datatypes <> nat ind
def 5459:5464 <> repeat
R5482:5482 LF.Poly <> X var
R5494:5496 Coq.Init.Datatypes <> nat ind
R5501:5504 LF.Poly <> list ind
R5506:5506 LF.Poly <> X var
R5519:5523 LF.Poly <> count var
R5539:5541 LF.Poly <> nil constr
R5543:5543 LF.Poly <> X var
R5549:5549 Coq.Init.Datatypes <> S constr
R5561:5564 LF.Poly <> cons constr
R5571:5576 LF.Poly <> repeat def
R5580:5580 LF.Poly <> x var
R5578:5578 LF.Poly <> X var
R5568:5568 LF.Poly <> x var
R5566:5566 LF.Poly <> X var
def 5747:5758 <> test_repeat1
R5778:5780 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5764:5769 LF.Poly <> repeat def
R5771:5773 Coq.Init.Datatypes <> nat ind
R5781:5784 LF.Poly <> cons constr
R5793:5796 LF.Poly <> cons constr
R5805:5807 LF.Poly <> nil constr
R5809:5811 Coq.Init.Datatypes <> nat ind
R5798:5800 Coq.Init.Datatypes <> nat ind
R5786:5788 Coq.Init.Datatypes <> nat ind
def 5970:5981 <> test_repeat2
R6006:6008 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5987:5992 LF.Poly <> repeat def
R5999:6003 LF.Basics <> false constr
R5994:5997 LF.Basics <> bool ind
R6009:6012 LF.Poly <> cons constr
R6026:6028 LF.Poly <> nil constr
R6030:6033 LF.Basics <> bool ind
R6019:6023 LF.Basics <> false constr
R6014:6017 LF.Basics <> bool ind
mod 6197:6209 <> MumbleGrumble
ind 6223:6228 MumbleGrumble mumble
constr 6244:6244 MumbleGrumble a
constr 6250:6250 MumbleGrumble b
constr 6279:6279 MumbleGrumble c
R6245:6245 LF.Poly <> mumble ind
R6257:6262 LF.Poly <> mumble ind
R6270:6272 Coq.Init.Datatypes <> nat ind
R6274:6274 LF.Poly <> mumble ind
R6280:6280 LF.Poly <> mumble ind
ind 6293:6299 MumbleGrumble grumble
constr 6324:6324 MumbleGrumble d
constr 6343:6343 MumbleGrumble e
R6331:6336 LF.Poly MumbleGrumble mumble ind
R6338:6338 LF.Poly <> grumble ind
R6338:6338 LF.Poly <> X var
R6350:6350 LF.Poly <> X var
R6352:6352 LF.Poly <> grumble ind
R6352:6352 LF.Poly <> X var
R6689:6701 LF.Poly MumbleGrumble <> mod
def 6989:6995 <> repeat'
R7009:7012 LF.Poly <> list ind
R7014:7014 LF.Poly <> X var
R7027:7031 LF.Poly <> count var
R7054:7056 LF.Poly <> nil constr
R7058:7058 LF.Poly <> X var
R7064:7064 Coq.Init.Datatypes <> S constr
R7076:7079 LF.Poly <> cons constr
R7086:7092 LF.Poly <> repeat' def
R7096:7096 LF.Poly <> x var
R7094:7094 LF.Poly <> X var
R7083:7083 LF.Poly <> x var
R7081:7081 LF.Poly <> X var
R7228:7231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7235:7238 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7239:7242 LF.Poly <> list ind
R7244:7244 LF.Poly <> X var
R7232:7234 Coq.Init.Datatypes <> nat ind
R7227:7227 LF.Poly <> X var
R7198:7204 LF.Poly <> repeat' def
R7282:7285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7289:7292 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7293:7296 LF.Poly <> list ind
R7298:7298 LF.Poly <> X var
R7286:7288 Coq.Init.Datatypes <> nat ind
R7281:7281 LF.Poly <> X var
R7253:7258 LF.Poly <> repeat def
def 9522:9529 <> repeat''
R9543:9546 LF.Poly <> list ind
R9548:9548 LF.Poly <> X var
R9561:9565 LF.Poly <> count var
R9588:9590 LF.Poly <> nil constr
R9598:9598 Coq.Init.Datatypes <> S constr
R9610:9613 LF.Poly <> cons constr
R9620:9627 LF.Poly <> repeat'' def
R9631:9631 LF.Poly <> x var
R9617:9617 LF.Poly <> x var
def 9949:9955 <> list123
R9962:9965 LF.Poly <> cons constr
R9974:9977 LF.Poly <> cons constr
R9986:9989 LF.Poly <> cons constr
R9998:10000 LF.Poly <> nil constr
R10002:10004 Coq.Init.Datatypes <> nat ind
R9991:9993 Coq.Init.Datatypes <> nat ind
R9979:9981 Coq.Init.Datatypes <> nat ind
R9967:9969 Coq.Init.Datatypes <> nat ind
def 10065:10072 <> list123'
R10079:10082 LF.Poly <> cons constr
R10089:10092 LF.Poly <> cons constr
R10099:10102 LF.Poly <> cons constr
R10109:10111 LF.Poly <> nil constr
R10589:10591 LF.Poly <> nil constr
R10589:10591 LF.Poly <> nil constr
R10608:10611 LF.Poly <> cons constr
R10608:10611 LF.Poly <> cons constr
R10628:10633 LF.Poly <> repeat def
R10628:10633 LF.Poly <> repeat def
def 10730:10738 <> list123''
R10743:10746 LF.Poly <> cons constr
R10751:10754 LF.Poly <> cons constr
R10759:10762 LF.Poly <> cons constr
R10766:10768 LF.Poly <> nil constr
def 10958:10966 <> repeat'''
R10984:10984 LF.Poly <> X var
R10996:10998 Coq.Init.Datatypes <> nat ind
R11003:11006 LF.Poly <> list ind
R11008:11008 LF.Poly <> X var
R11021:11025 LF.Poly <> count var
R11048:11050 LF.Poly <> nil constr
R11056:11056 Coq.Init.Datatypes <> S constr
R11068:11071 LF.Poly <> cons constr
R11076:11084 LF.Poly <> repeat''' def
R11086:11086 LF.Poly <> x var
R11073:11073 LF.Poly <> x var
ind 11719:11723 <> list'
constr 11748:11751 <> nil'
constr 11757:11761 <> cons'
R11752:11752 LF.Poly <> list' ind
R11752:11752 LF.Poly <> X var
R11768:11768 LF.Poly <> X var
R11776:11780 LF.Poly <> list' ind
R11776:11780 LF.Poly <> X var
R11782:11782 LF.Poly <> list' ind
R11782:11782 LF.Poly <> X var
def 12379:12381 <> app
R12403:12406 LF.Poly <> list ind
R12408:12408 LF.Poly <> X var
R12413:12416 LF.Poly <> list ind
R12418:12418 LF.Poly <> X var
R12431:12432 LF.Poly <> l1 var
R12443:12445 LF.Poly <> nil constr
R12455:12456 LF.Poly <> l2 var
R12462:12465 LF.Poly <> cons constr
R12474:12477 LF.Poly <> cons constr
R12482:12484 LF.Poly <> app def
R12488:12489 LF.Poly <> l2 var
def 12509:12511 <> rev
R12525:12528 LF.Poly <> list ind
R12530:12530 LF.Poly <> X var
R12535:12538 LF.Poly <> list ind
R12540:12540 LF.Poly <> X var
R12553:12553 LF.Poly <> l var
R12564:12566 LF.Poly <> nil constr
R12576:12578 LF.Poly <> nil constr
R12584:12587 LF.Poly <> cons constr
R12596:12598 LF.Poly <> app def
R12609:12612 LF.Poly <> cons constr
R12616:12618 LF.Poly <> nil constr
R12601:12603 LF.Poly <> rev def
def 12638:12643 <> length
R12661:12664 LF.Poly <> list ind
R12666:12666 LF.Poly <> X var
R12671:12673 Coq.Init.Datatypes <> nat ind
R12686:12686 LF.Poly <> l var
R12697:12699 LF.Poly <> nil constr
R12710:12713 LF.Poly <> cons constr
R12723:12723 Coq.Init.Datatypes <> S constr
R12726:12731 LF.Poly <> length def
def 12753:12761 <> test_rev1
R12792:12795 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12815:12815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12767:12769 LF.Poly <> rev def
R12772:12775 LF.Poly <> cons constr
R12780:12783 LF.Poly <> cons constr
R12787:12789 LF.Poly <> nil constr
R12796:12799 LF.Poly <> cons constr
R12804:12807 LF.Poly <> cons constr
R12811:12813 LF.Poly <> nil constr
def 12852:12860 <> test_rev2
R12884:12886 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12865:12867 LF.Poly <> rev def
R12870:12873 LF.Poly <> cons constr
R12880:12882 LF.Poly <> nil constr
R12875:12878 LF.Basics <> true constr
R12887:12890 LF.Poly <> cons constr
R12897:12899 LF.Poly <> nil constr
R12892:12895 LF.Basics <> true constr
def 12936:12947 <> test_length1
R12987:12989 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12950:12955 LF.Poly <> length def
R12958:12961 LF.Poly <> cons constr
R12966:12969 LF.Poly <> cons constr
R12974:12977 LF.Poly <> cons constr
R12981:12983 LF.Poly <> nil constr
def 13915:13919 <> mynil
R13924:13926 LF.Poly <> nil constr
def 14493:14497 <> mynil
R14501:14504 LF.Poly <> list ind
R14506:14508 Coq.Init.Datatypes <> nat ind
R14513:14515 LF.Poly <> nil constr
R14668:14671 LF.Poly <> list ind
R14673:14673 LF.Poly <> X var
R14645:14647 LF.Poly <> nil constr
def 14688:14693 <> mynil'
R14699:14701 LF.Poly <> nil constr
R14703:14705 Coq.Init.Datatypes <> nat ind
R14987:14990 LF.Poly <> cons constr
not 14974:14974 <> :::x_'::'_x
R15072:15074 LF.Poly <> nil constr
not 15063:15063 <> :::'['_']'
R15107:15110 LF.Poly <> cons constr
R15118:15121 LF.Poly <> cons constr
R15125:15126 LF.Poly <> :::'['_']' not
not 15086:15086 <> :::'['_x_';'_'..'_';'_x_']'
R15156:15158 LF.Poly <> app def
not 15143:15143 <> :::x_'++'_x
def 15291:15300 <> list123'''
R15305:15305 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R15307:15308 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R15310:15311 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R15313:15313 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
prf 15622:15630 <> app_nil_r
R15660:15663 LF.Poly <> list ind
R15665:15665 LF.Poly <> X var
R15677:15679 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15671:15674 LF.Poly <> :::x_'++'_x not
R15670:15670 LF.Poly <> l var
R15675:15676 LF.Poly <> :::'['_']' not
R15680:15680 LF.Poly <> l var
prf 15798:15806 <> app_assoc
R15826:15829 LF.Poly <> list ind
R15831:15831 LF.Poly <> A var
R15848:15850 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15838:15841 LF.Poly <> :::x_'++'_x not
R15837:15837 LF.Poly <> l var
R15843:15846 LF.Poly <> :::x_'++'_x not
R15842:15842 LF.Poly <> m var
R15847:15847 LF.Poly <> n var
R15851:15851 LF.Poly <> :::x_'++'_x not
R15858:15862 LF.Poly <> :::x_'++'_x not
R15853:15856 LF.Poly <> :::x_'++'_x not
R15852:15852 LF.Poly <> l var
R15857:15857 LF.Poly <> m var
R15863:15863 LF.Poly <> n var
R15941:15941 LF.Poly <> :::x_'++'_x not
R15946:15950 LF.Poly <> :::x_'++'_x not
R15943:15944 LF.Poly <> :::x_'::'_x not
R15941:15941 LF.Poly <> :::x_'++'_x not
R15946:15950 LF.Poly <> :::x_'++'_x not
R15943:15944 LF.Poly <> :::x_'::'_x not
prf 16002:16011 <> app_length
R16040:16043 LF.Poly <> list ind
R16045:16045 LF.Poly <> X var
R16068:16070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16051:16056 LF.Poly <> length def
R16061:16064 LF.Poly <> :::x_'++'_x not
R16059:16060 LF.Poly <> l1 var
R16065:16066 LF.Poly <> l2 var
R16080:16082 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R16071:16076 LF.Poly <> length def
R16078:16079 LF.Poly <> l1 var
R16083:16088 LF.Poly <> length def
R16090:16091 LF.Poly <> l2 var
R16146:16151 LF.Poly <> length def
R16153:16154 LF.Poly <> :::'['_']' not
R16146:16151 LF.Poly <> length def
R16153:16154 LF.Poly <> :::'['_']' not
R16189:16189 LF.Poly <> :::x_'++'_x not
R16194:16198 LF.Poly <> :::x_'++'_x not
R16191:16192 LF.Poly <> :::x_'::'_x not
R16189:16189 LF.Poly <> :::x_'++'_x not
R16194:16198 LF.Poly <> :::x_'++'_x not
R16191:16192 LF.Poly <> :::x_'::'_x not
prf 16378:16390 <> rev_app_distr
R16411:16414 LF.Poly <> list ind
R16416:16416 LF.Poly <> X var
R16436:16438 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16422:16424 LF.Poly <> rev def
R16429:16432 LF.Poly <> :::x_'++'_x not
R16427:16428 LF.Poly <> l1 var
R16433:16434 LF.Poly <> l2 var
R16445:16448 LF.Poly <> :::x_'++'_x not
R16439:16441 LF.Poly <> rev def
R16443:16444 LF.Poly <> l2 var
R16449:16451 LF.Poly <> rev def
R16453:16454 LF.Poly <> l1 var
R16519:16527 LF.Poly <> app_nil_r thm
R16519:16527 LF.Poly <> app_nil_r thm
R16519:16527 LF.Poly <> app_nil_r thm
R16554:16554 LF.Poly <> :::x_'++'_x not
R16561:16565 LF.Poly <> :::x_'++'_x not
R16557:16558 LF.Poly <> :::x_'::'_x not
R16554:16554 LF.Poly <> :::x_'++'_x not
R16561:16565 LF.Poly <> :::x_'++'_x not
R16557:16558 LF.Poly <> :::x_'::'_x not
R16603:16611 LF.Poly <> app_assoc thm
R16603:16611 LF.Poly <> app_assoc thm
R16603:16611 LF.Poly <> app_assoc thm
prf 16641:16654 <> rev_involutive
R16686:16689 LF.Poly <> list ind
R16691:16691 LF.Poly <> X var
R16707:16709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16696:16698 LF.Poly <> rev def
R16701:16703 LF.Poly <> rev def
R16705:16705 LF.Poly <> l var
R16710:16710 LF.Poly <> l var
R16788:16790 LF.Poly <> rev def
R16794:16797 LF.Poly <> :::x_'::'_x not
R16788:16790 LF.Poly <> rev def
R16794:16797 LF.Poly <> :::x_'::'_x not
R16811:16823 LF.Poly <> rev_app_distr thm
R16811:16823 LF.Poly <> rev_app_distr thm
R16811:16823 LF.Poly <> rev_app_distr thm
ind 17169:17172 <> prod
constr 17199:17202 <> pair
R17209:17209 LF.Poly <> X var
R17217:17217 LF.Poly <> Y var
R17219:17219 LF.Poly <> prod ind
R17219:17219 LF.Poly <> Y var
R17219:17219 LF.Poly <> X var
R17232:17235 LF.Poly <> pair constr
R17232:17235 LF.Poly <> pair constr
R17378:17381 LF.Poly <> pair constr
not 17362:17362 <> :::'('_x_','_x_')'
R17544:17547 LF.Poly <> prod ind
not 17532:17532 <> ::type_scope:x_'*'_x
def 18253:18255 <> fst
R18276:18278 LF.Poly <> ::type_scope:x_'*'_x not
R18275:18275 LF.Poly <> X var
R18279:18279 LF.Poly <> Y var
R18284:18284 LF.Poly <> X var
R18297:18297 LF.Poly <> p var
R18308:18308 LF.Poly <> :::'('_x_','_x_')' not
R18310:18311 LF.Poly <> :::'('_x_','_x_')' not
R18313:18313 LF.Poly <> :::'('_x_','_x_')' not
def 18339:18341 <> snd
R18362:18364 LF.Poly <> ::type_scope:x_'*'_x not
R18361:18361 LF.Poly <> X var
R18365:18365 LF.Poly <> Y var
R18370:18370 LF.Poly <> Y var
R18383:18383 LF.Poly <> p var
R18394:18394 LF.Poly <> :::'('_x_','_x_')' not
R18396:18397 LF.Poly <> :::'('_x_','_x_')' not
R18399:18399 LF.Poly <> :::'('_x_','_x_')' not
def 18646:18652 <> combine
R18673:18676 LF.Poly <> list ind
R18678:18678 LF.Poly <> X var
R18687:18690 LF.Poly <> list ind
R18692:18692 LF.Poly <> Y var
R18708:18711 LF.Poly <> list ind
R18715:18715 LF.Poly <> ::type_scope:x_'*'_x not
R18714:18714 LF.Poly <> X var
R18716:18716 LF.Poly <> Y var
R18734:18735 LF.Poly <> ly var
R18730:18731 LF.Poly <> lx var
R18746:18747 LF.Poly <> :::'['_']' not
R18755:18756 LF.Poly <> :::'['_']' not
R18765:18766 LF.Poly <> :::'['_']' not
R18771:18772 LF.Poly <> :::'['_']' not
R18779:18782 LF.Poly <> :::x_'::'_x not
R18788:18791 LF.Poly <> :::x_'::'_x not
R18804:18808 LF.Poly <> :::x_'::'_x not
R18822:18822 LF.Poly <> :::x_'::'_x not
R18798:18798 LF.Poly <> :::'('_x_','_x_')' not
R18800:18801 LF.Poly <> :::'('_x_','_x_')' not
R18803:18803 LF.Poly <> :::'('_x_','_x_')' not
R18809:18815 LF.Poly <> combine def
R19234:19240 LF.Poly <> combine def
R19252:19258 LF.Poly <> combine def
R19266:19266 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19272:19272 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19278:19278 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19283:19283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19288:19288 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19267:19271 LF.Basics <> false constr
R19273:19277 LF.Basics <> false constr
R19279:19282 LF.Basics <> true constr
R19284:19287 LF.Basics <> true constr
R19260:19260 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19262:19262 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19264:19264 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 19638:19642 <> split
R19662:19665 LF.Poly <> list ind
R19669:19669 LF.Poly <> ::type_scope:x_'*'_x not
R19668:19668 LF.Poly <> X var
R19670:19670 LF.Poly <> Y var
R19676:19676 LF.Poly <> ::type_scope:x_'*'_x not
R19683:19687 LF.Poly <> ::type_scope:x_'*'_x not
R19694:19694 LF.Poly <> ::type_scope:x_'*'_x not
R19677:19680 LF.Poly <> list ind
R19682:19682 LF.Poly <> X var
R19688:19691 LF.Poly <> list ind
R19693:19693 LF.Poly <> Y var
R19707:19707 LF.Poly <> l var
R19718:19720 LF.Poly <> nil constr
R19725:19725 LF.Poly <> :::'('_x_','_x_')' not
R19728:19729 LF.Poly <> :::'('_x_','_x_')' not
R19732:19732 LF.Poly <> :::'('_x_','_x_')' not
R19726:19727 LF.Poly <> :::'['_']' not
R19730:19731 LF.Poly <> :::'['_']' not
R19744:19747 LF.Poly <> :::x_'::'_x not
R19738:19738 LF.Poly <> :::'('_x_','_x_')' not
R19740:19741 LF.Poly <> :::'('_x_','_x_')' not
R19743:19743 LF.Poly <> :::'('_x_','_x_')' not
R19753:19753 LF.Poly <> :::'('_x_','_x_')' not
R19771:19772 LF.Poly <> :::'('_x_','_x_')' not
R19790:19790 LF.Poly <> :::'('_x_','_x_')' not
R19755:19758 LF.Poly <> :::x_'::'_x not
R19759:19761 LF.Poly <> fst def
R19763:19767 LF.Poly <> split def
R19774:19777 LF.Poly <> :::x_'::'_x not
R19778:19780 LF.Poly <> snd def
R19782:19786 LF.Poly <> split def
def 19808:19817 <> test_split
R19849:19851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19822:19826 LF.Poly <> split def
R19828:19828 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19838:19838 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19848:19848 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19829:19829 LF.Poly <> :::'('_x_','_x_')' not
R19831:19831 LF.Poly <> :::'('_x_','_x_')' not
R19837:19837 LF.Poly <> :::'('_x_','_x_')' not
R19832:19836 LF.Basics <> false constr
R19839:19839 LF.Poly <> :::'('_x_','_x_')' not
R19841:19841 LF.Poly <> :::'('_x_','_x_')' not
R19847:19847 LF.Poly <> :::'('_x_','_x_')' not
R19842:19846 LF.Basics <> false constr
R19852:19852 LF.Poly <> :::'('_x_','_x_')' not
R19858:19858 LF.Poly <> :::'('_x_','_x_')' not
R19872:19872 LF.Poly <> :::'('_x_','_x_')' not
R19853:19853 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19855:19855 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19857:19857 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19859:19859 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19865:19865 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19871:19871 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19860:19864 LF.Basics <> false constr
R19866:19870 LF.Basics <> false constr
mod 20310:20325 <> OptionPlayground
ind 20339:20344 OptionPlayground option
constr 20369:20372 OptionPlayground Some
constr 20386:20389 OptionPlayground None
R20379:20379 LF.Poly <> X var
R20381:20381 LF.Poly <> option ind
R20381:20381 LF.Poly <> X var
R20390:20390 LF.Poly <> option ind
R20390:20390 LF.Poly <> X var
R20403:20406 LF.Poly OptionPlayground Some constr
R20403:20406 LF.Poly OptionPlayground Some constr
R20423:20426 LF.Poly OptionPlayground None constr
R20423:20426 LF.Poly OptionPlayground None constr
R20438:20453 LF.Poly OptionPlayground <> mod
def 20563:20571 <> nth_error
R20589:20592 LF.Poly <> list ind
R20594:20594 LF.Poly <> X var
R20602:20604 Coq.Init.Datatypes <> nat ind
R20628:20633 Coq.Init.Datatypes <> option ind
R20635:20635 LF.Poly <> X var
R20648:20648 LF.Poly <> l var
R20659:20661 LF.Poly <> nil constr
R20666:20669 Coq.Init.Datatypes <> None constr
R20676:20679 LF.Poly <> :::x_'::'_x not
R20692:20692 LF.Poly <> n var
R20716:20716 Coq.Init.Datatypes <> O constr
R20721:20724 Coq.Init.Datatypes <> Some constr
R20745:20745 Coq.Init.Datatypes <> S constr
R20753:20761 LF.Poly <> nth_error def
def 20804:20818 <> test_nth_error1
R20843:20845 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20822:20830 LF.Poly <> nth_error def
R20832:20832 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20834:20834 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20836:20836 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20838:20838 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20840:20840 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20846:20849 Coq.Init.Datatypes <> Some constr
def 20887:20901 <> test_nth_error2
R20926:20928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20905:20913 LF.Poly <> nth_error def
R20915:20915 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20919:20919 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20923:20923 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20916:20916 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20918:20918 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20920:20920 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20922:20922 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20929:20932 Coq.Init.Datatypes <> Some constr
R20934:20934 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20936:20936 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 20972:20986 <> test_nth_error3
R21008:21010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20990:20998 LF.Poly <> nth_error def
R21000:21000 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21005:21005 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21001:21004 LF.Basics <> true constr
R21011:21014 Coq.Init.Datatypes <> None constr
def 21277:21284 <> hd_error
R21302:21305 LF.Poly <> list ind
R21307:21307 LF.Poly <> X var
R21312:21317 Coq.Init.Datatypes <> option ind
R21319:21319 LF.Poly <> X var
R21332:21332 LF.Poly <> l var
R21343:21345 LF.Poly <> nil constr
R21350:21353 Coq.Init.Datatypes <> None constr
R21360:21363 LF.Poly <> :::x_'::'_x not
R21369:21372 Coq.Init.Datatypes <> Some constr
R21545:21548 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21549:21554 Coq.Init.Datatypes <> option ind
R21556:21556 LF.Poly <> X var
R21539:21542 LF.Poly <> list ind
R21544:21544 LF.Poly <> X var
R21511:21518 LF.Poly <> hd_error def
def 21568:21581 <> test_hd_error1
R21599:21601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21585:21592 LF.Poly <> hd_error def
R21594:21594 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21596:21596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21598:21598 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21602:21605 Coq.Init.Datatypes <> Some constr
def 21645:21658 <> test_hd_error2
R21681:21684 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21662:21669 LF.Poly <> hd_error def
R21672:21672 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21676:21676 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21680:21680 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21673:21673 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21675:21675 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21677:21677 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21679:21679 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21685:21688 Coq.Init.Datatypes <> Some constr
R21690:21690 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21692:21692 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 22393:22402 <> doit3times
R22421:22422 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22423:22423 LF.Poly <> X var
R22420:22420 LF.Poly <> X var
R22431:22431 LF.Poly <> X var
R22436:22436 LF.Poly <> X var
R22443:22443 LF.Poly <> f var
R22446:22446 LF.Poly <> f var
R22449:22449 LF.Poly <> f var
R22451:22451 LF.Poly <> n var
R22640:22640 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22647:22651 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22653:22656 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22657:22657 LF.Poly <> X var
R22652:22652 LF.Poly <> X var
R22642:22645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22646:22646 LF.Poly <> X var
R22641:22641 LF.Poly <> X var
R22610:22619 LF.Poly <> doit3times def
def 22669:22683 <> test_doit3times
R22707:22709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22686:22695 LF.Poly <> doit3times def
R22697:22704 LF.Basics <> minustwo def
def 22747:22762 <> test_doit3times'
R22785:22787 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22765:22774 LF.Poly <> doit3times def
R22781:22784 LF.Basics <> true constr
R22776:22779 LF.Basics <> negb def
R22788:22792 LF.Basics <> false constr
def 23182:23187 <> filter
R23206:23207 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23208:23211 LF.Basics <> bool ind
R23205:23205 LF.Poly <> X var
R23217:23220 LF.Poly <> list ind
R23222:23222 LF.Poly <> X var
R23227:23230 LF.Poly <> list ind
R23232:23232 LF.Poly <> X var
R23245:23245 LF.Poly <> l var
R23256:23257 LF.Poly <> :::'['_']' not
R23262:23263 LF.Poly <> :::'['_']' not
R23270:23273 LF.Poly <> :::x_'::'_x not
R23286:23289 LF.Poly <> test var
R23328:23333 LF.Poly <> filter def
R23335:23338 LF.Poly <> test var
R23299:23303 LF.Poly <> :::x_'::'_x not
R23317:23317 LF.Poly <> :::x_'::'_x not
R23304:23309 LF.Poly <> filter def
R23311:23314 LF.Poly <> test var
def 23518:23529 <> test_filter1
R23553:23555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23532:23537 LF.Poly <> filter def
R23544:23544 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23546:23546 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23548:23548 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23550:23550 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23552:23552 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23539:23542 LF.Basics <> even def
R23556:23556 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23558:23558 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23560:23560 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 23600:23610 <> length_is_1
R23628:23631 LF.Poly <> list ind
R23633:23633 LF.Poly <> X var
R23638:23641 LF.Basics <> bool ind
R23648:23648 LF.Basics <> ::nat_scope:x_'=?'_x not
R23657:23661 LF.Basics <> ::nat_scope:x_'=?'_x not
R23649:23654 LF.Poly <> length def
R23656:23656 LF.Poly <> l var
def 23674:23685 <> test_filter2
R23760:23764 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23692:23697 LF.Poly <> filter def
R23722:23723 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23730:23731 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23735:23736 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23740:23741 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23749:23750 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23753:23754 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23758:23759 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23724:23724 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23726:23727 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23729:23729 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23732:23732 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23734:23734 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23737:23737 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23739:23739 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23742:23742 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23744:23744 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23746:23746 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23748:23748 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23751:23752 LF.Poly <> :::'['_']' not
R23755:23755 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23757:23757 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23699:23709 LF.Poly <> length_is_1 def
R23765:23766 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23770:23771 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23775:23776 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23780:23781 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23767:23767 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23769:23769 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23772:23772 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23774:23774 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23777:23777 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23779:23779 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 23939:23954 <> countoddmembers'
R23959:23962 LF.Poly <> list ind
R23964:23966 Coq.Init.Datatypes <> nat ind
R23971:23973 Coq.Init.Datatypes <> nat ind
R23980:23985 LF.Poly <> length def
R23988:23993 LF.Poly <> filter def
R23999:23999 LF.Poly <> l var
R23995:23997 LF.Basics <> odd def
def 24012:24033 <> test_countoddmembers'1
R24068:24070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24038:24053 LF.Poly <> countoddmembers' def
R24055:24055 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24057:24057 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24059:24059 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24061:24061 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24063:24063 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24065:24065 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24067:24067 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 24107:24128 <> test_countoddmembers'2
R24157:24159 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24133:24148 LF.Poly <> countoddmembers' def
R24150:24150 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24152:24152 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24154:24154 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24156:24156 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 24196:24217 <> test_countoddmembers'3
R24242:24244 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24222:24237 LF.Poly <> countoddmembers' def
R24239:24241 LF.Poly <> nil constr
def 25022:25035 <> test_anon_fun'
R25069:25071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25040:25049 LF.Poly <> doit3times def
R25062:25064 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R25061:25061 LF.Poly <> n var
R25065:25065 LF.Poly <> n var
R25120:25122 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R25119:25119 LF.Poly <> n var
R25123:25123 LF.Poly <> n var
def 25336:25348 <> test_filter2'
R25438:25442 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25355:25360 LF.Poly <> filter def
R25400:25401 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25408:25409 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25413:25414 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25418:25419 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25427:25428 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25431:25432 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25436:25437 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25402:25402 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25404:25405 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25407:25407 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25410:25410 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25412:25412 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25415:25415 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25417:25417 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25420:25420 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25422:25422 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25424:25424 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25426:25426 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25429:25430 LF.Poly <> :::'['_']' not
R25433:25433 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25435:25435 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25372:25372 LF.Basics <> ::nat_scope:x_'=?'_x not
R25381:25385 LF.Basics <> ::nat_scope:x_'=?'_x not
R25373:25378 LF.Poly <> length def
R25380:25380 LF.Poly <> l var
R25443:25444 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25448:25449 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25453:25454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25458:25459 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25445:25445 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25447:25447 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25450:25450 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25452:25452 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25455:25455 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25457:25457 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25504:25504 LF.Basics <> ::nat_scope:x_'=?'_x not
R25513:25517 LF.Basics <> ::nat_scope:x_'=?'_x not
R25505:25510 LF.Poly <> length def
R25512:25512 LF.Poly <> l var
R25799:25802 LF.Basics <> bool ind
def 25818:25832 <> filter_even_gt7
R25839:25842 LF.Poly <> list ind
R25844:25846 Coq.Init.Datatypes <> nat ind
R25851:25854 LF.Poly <> list ind
R25856:25858 Coq.Init.Datatypes <> nat ind
R25865:25870 LF.Poly <> filter def
R25906:25906 LF.Poly <> l var
R25882:25882 LF.Basics <> :::x_'&&'_x not
R25890:25895 LF.Basics <> :::x_'&&'_x not
R25903:25903 LF.Basics <> :::x_'&&'_x not
R25884:25888 LF.Basics <> ::nat_scope:x_'<=?'_x not
R25889:25889 LF.Poly <> n var
R25896:25899 LF.Basics <> even def
R25901:25901 LF.Poly <> n var
def 25918:25939 <> test_filter_even_gt7_1
R25980:25982 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25945:25959 LF.Poly <> filter_even_gt7 def
R25961:25961 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25963:25963 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25965:25965 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25967:25967 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25969:25969 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25972:25972 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25974:25974 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25977:25977 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25979:25979 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25983:25983 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25986:25986 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25989:25989 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25991:25991 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26010:26024 LF.Poly <> filter_even_gt7 def
def 26061:26082 <> test_filter_even_gt7_2
R26118:26120 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26088:26102 LF.Poly <> filter_even_gt7 def
R26104:26104 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26106:26106 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26108:26108 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26110:26110 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26113:26113 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26117:26117 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26121:26122 LF.Poly <> :::'['_']' not
R26141:26155 LF.Poly <> filter_even_gt7 def
def 26814:26822 <> partition
R26865:26868 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26869:26872 LF.Basics <> bool ind
R26864:26864 LF.Poly <> X var
R26901:26904 LF.Poly <> list ind
R26906:26906 LF.Poly <> X var
R26936:26938 LF.Poly <> ::type_scope:x_'*'_x not
R26930:26933 LF.Poly <> list ind
R26935:26935 LF.Poly <> X var
R26939:26942 LF.Poly <> list ind
R26944:26944 LF.Poly <> X var
R26968:26968 LF.Poly <> :::'('_x_','_x_')' not
R26982:26983 LF.Poly <> :::'('_x_','_x_')' not
R27016:27016 LF.Poly <> :::'('_x_','_x_')' not
R26969:26974 LF.Poly <> filter def
R26981:26981 LF.Poly <> l var
R26976:26979 LF.Poly <> test var
R26984:26989 LF.Poly <> filter def
R27015:27015 LF.Poly <> l var
R27001:27004 LF.Basics <> negb def
R27006:27009 LF.Poly <> test var
R27011:27011 LF.Poly <> x var
def 27028:27042 <> test_partition1
R27070:27072 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27045:27053 LF.Poly <> partition def
R27059:27059 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27061:27061 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27063:27063 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27065:27065 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27067:27067 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27069:27069 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27055:27057 LF.Basics <> odd def
R27073:27073 LF.Poly <> :::'('_x_','_x_')' not
R27081:27082 LF.Poly <> :::'('_x_','_x_')' not
R27088:27088 LF.Poly <> :::'('_x_','_x_')' not
R27074:27074 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27076:27076 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27078:27078 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27080:27080 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27083:27083 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27085:27085 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27087:27087 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27107:27115 LF.Poly <> partition def
def 27151:27165 <> test_partition2
R27202:27204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27168:27176 LF.Poly <> partition def
R27195:27195 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27197:27197 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27199:27199 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27201:27201 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27188:27192 LF.Basics <> false constr
R27205:27205 LF.Poly <> :::'('_x_','_x_')' not
R27208:27209 LF.Poly <> :::'('_x_','_x_')' not
R27217:27217 LF.Poly <> :::'('_x_','_x_')' not
R27206:27207 LF.Poly <> :::'['_']' not
R27210:27210 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27212:27212 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27214:27214 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27216:27216 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27236:27244 LF.Poly <> partition def
def 27440:27442 <> map
R27463:27464 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27465:27465 LF.Poly <> Y var
R27462:27462 LF.Poly <> X var
R27473:27476 LF.Poly <> list ind
R27478:27478 LF.Poly <> X var
R27483:27486 LF.Poly <> list ind
R27488:27488 LF.Poly <> Y var
R27501:27501 LF.Poly <> l var
R27512:27513 LF.Poly <> :::'['_']' not
R27522:27523 LF.Poly <> :::'['_']' not
R27530:27533 LF.Poly <> :::x_'::'_x not
R27539:27539 LF.Poly <> :::x_'::'_x not
R27543:27548 LF.Poly <> :::x_'::'_x not
R27556:27556 LF.Poly <> :::x_'::'_x not
R27540:27540 LF.Poly <> f var
R27549:27551 LF.Poly <> map def
R27553:27553 LF.Poly <> f var
def 27773:27781 <> test_map1
R27815:27817 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27784:27786 LF.Poly <> map def
R27808:27808 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27810:27810 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27812:27812 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27814:27814 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27798:27801 Coq.Init.Peano <> plus syndef
R27805:27805 LF.Poly <> x var
R27818:27818 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27820:27820 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27822:27822 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27824:27824 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 28117:28125 <> test_map2
R28147:28149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28130:28132 LF.Poly <> map def
R28138:28138 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28140:28140 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28142:28142 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28144:28144 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28146:28146 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28134:28136 LF.Basics <> odd def
R28150:28150 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28156:28156 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28161:28161 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28167:28167 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28172:28172 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28151:28155 LF.Basics <> false constr
R28157:28160 LF.Basics <> true constr
R28162:28166 LF.Basics <> false constr
R28168:28171 LF.Basics <> true constr
def 28360:28368 <> test_map3
R28414:28418 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28375:28377 LF.Poly <> map def
R28405:28405 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28407:28407 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28409:28409 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28411:28411 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28413:28413 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28389:28389 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28396:28396 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28402:28402 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28390:28393 LF.Basics <> even def
R28395:28395 LF.Poly <> n var
R28397:28399 LF.Basics <> odd def
R28401:28401 LF.Poly <> n var
R28419:28419 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28432:28432 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28445:28445 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28458:28458 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28471:28471 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28420:28420 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28425:28425 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28431:28431 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28421:28424 LF.Basics <> true constr
R28426:28430 LF.Basics <> false constr
R28433:28433 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28439:28439 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28444:28444 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28434:28438 LF.Basics <> false constr
R28440:28443 LF.Basics <> true constr
R28446:28446 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28451:28451 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28457:28457 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28447:28450 LF.Basics <> true constr
R28452:28456 LF.Basics <> false constr
R28459:28459 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28465:28465 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28470:28470 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28460:28464 LF.Basics <> false constr
R28466:28469 LF.Basics <> true constr
prf 28739:28746 <> map_dist
R28776:28779 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28780:28780 LF.Poly <> Y var
R28775:28775 LF.Poly <> X var
R28792:28795 LF.Poly <> list ind
R28797:28797 LF.Poly <> X var
R28819:28821 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28803:28805 LF.Poly <> map def
R28812:28815 LF.Poly <> :::x_'++'_x not
R28810:28811 LF.Poly <> l1 var
R28816:28817 LF.Poly <> l2 var
R28807:28807 LF.Poly <> f var
R28822:28822 LF.Poly <> :::x_'++'_x not
R28831:28836 LF.Poly <> :::x_'++'_x not
R28845:28845 LF.Poly <> :::x_'++'_x not
R28823:28825 LF.Poly <> map def
R28829:28830 LF.Poly <> l1 var
R28827:28827 LF.Poly <> f var
R28837:28839 LF.Poly <> map def
R28843:28844 LF.Poly <> l2 var
R28841:28841 LF.Poly <> f var
R28926:28926 LF.Poly <> :::x_'++'_x not
R28935:28939 LF.Poly <> :::x_'++'_x not
R28929:28932 LF.Poly <> :::x_'::'_x not
R28926:28926 LF.Poly <> :::x_'++'_x not
R28935:28939 LF.Poly <> :::x_'++'_x not
R28929:28932 LF.Poly <> :::x_'::'_x not
R28952:28954 LF.Poly <> map def
R28961:28964 LF.Poly <> :::x_'::'_x not
R28967:28970 LF.Poly <> :::x_'++'_x not
R28952:28954 LF.Poly <> map def
R28961:28964 LF.Poly <> :::x_'::'_x not
R28967:28970 LF.Poly <> :::x_'++'_x not
R28986:28988 LF.Poly <> map def
R28995:28998 LF.Poly <> :::x_'::'_x not
R28986:28988 LF.Poly <> map def
R28995:28998 LF.Poly <> :::x_'::'_x not
R29012:29012 LF.Poly <> :::x_'++'_x not
R29029:29033 LF.Poly <> :::x_'++'_x not
R29017:29020 LF.Poly <> :::x_'::'_x not
R29021:29023 LF.Poly <> map def
R29034:29036 LF.Poly <> map def
R29012:29012 LF.Poly <> :::x_'++'_x not
R29029:29033 LF.Poly <> :::x_'++'_x not
R29017:29020 LF.Poly <> :::x_'::'_x not
R29021:29023 LF.Poly <> map def
R29034:29036 LF.Poly <> map def
prf 29088:29094 <> map_rev
R29124:29127 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29128:29128 LF.Poly <> Y var
R29123:29123 LF.Poly <> X var
R29136:29139 LF.Poly <> list ind
R29141:29141 LF.Poly <> X var
R29160:29162 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29147:29149 LF.Poly <> map def
R29154:29156 LF.Poly <> rev def
R29158:29158 LF.Poly <> l var
R29151:29151 LF.Poly <> f var
R29163:29165 LF.Poly <> rev def
R29168:29170 LF.Poly <> map def
R29174:29174 LF.Poly <> l var
R29172:29172 LF.Poly <> f var
R29279:29286 LF.Poly <> map_dist thm
R29279:29286 LF.Poly <> map_dist thm
R29279:29286 LF.Poly <> map_dist thm
R29331:29333 LF.Poly <> map def
def 29812:29819 <> flat_map
R29838:29841 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29842:29845 LF.Poly <> list ind
R29847:29847 LF.Poly <> Y var
R29837:29837 LF.Poly <> X var
R29854:29857 LF.Poly <> list ind
R29859:29859 LF.Poly <> X var
R29883:29886 LF.Poly <> list ind
R29888:29888 LF.Poly <> Y var
R29901:29901 LF.Poly <> l var
R29912:29914 LF.Poly <> nil constr
R29919:29921 LF.Poly <> nil constr
R29928:29931 LF.Poly <> :::x_'::'_x not
R29937:29939 LF.Poly <> app def
R29948:29955 LF.Poly <> flat_map def
R29957:29957 LF.Poly <> f var
R29942:29942 LF.Poly <> f var
def 29978:29991 <> test_flat_map1
R30031:30035 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29996:30003 LF.Poly <> flat_map def
R30024:30024 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30026:30026 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30028:30028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30030:30030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30015:30015 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30017:30017 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30019:30019 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30021:30021 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30016:30016 LF.Poly <> n var
R30018:30018 LF.Poly <> n var
R30020:30020 LF.Poly <> n var
R30036:30036 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30038:30039 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30041:30042 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30044:30045 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30047:30048 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30050:30051 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30053:30054 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30056:30057 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30059:30060 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30062:30062 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 30239:30248 <> option_map
R30269:30272 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30273:30273 LF.Poly <> Y var
R30268:30268 LF.Poly <> X var
R30282:30287 Coq.Init.Datatypes <> option ind
R30289:30289 LF.Poly <> X var
R30316:30321 Coq.Init.Datatypes <> option ind
R30323:30323 LF.Poly <> Y var
R30336:30337 LF.Poly <> xo var
R30348:30351 Coq.Init.Datatypes <> None constr
R30356:30359 Coq.Init.Datatypes <> None constr
R30365:30368 Coq.Init.Datatypes <> Some constr
R30375:30378 Coq.Init.Datatypes <> Some constr
R30381:30381 LF.Poly <> f var
def 31227:31230 <> fold
R31250:31251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31253:31254 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31255:31255 LF.Poly <> Y var
R31252:31252 LF.Poly <> Y var
R31249:31249 LF.Poly <> X var
R31263:31266 LF.Poly <> list ind
R31268:31268 LF.Poly <> X var
R31276:31276 LF.Poly <> Y var
R31306:31306 LF.Poly <> Y var
R31319:31319 LF.Poly <> l var
R31330:31332 LF.Poly <> nil constr
R31337:31337 LF.Poly <> b var
R31344:31347 LF.Poly <> :::x_'::'_x not
R31353:31353 LF.Poly <> f var
R31358:31361 LF.Poly <> fold def
R31367:31367 LF.Poly <> b var
R31363:31363 LF.Poly <> f var
R31864:31867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31872:31875 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31876:31879 LF.Basics <> bool ind
R31868:31871 LF.Basics <> bool ind
R31855:31858 LF.Poly <> list ind
R31860:31863 LF.Basics <> bool ind
R31842:31845 LF.Poly <> fold def
R31847:31850 LF.Basics <> andb def
def 31891:31903 <> fold_example1
R31930:31932 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31909:31912 LF.Poly <> fold def
R31919:31919 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31921:31921 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31923:31923 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31925:31925 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31927:31927 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31914:31917 Coq.Init.Peano <> mult syndef
def 31971:31983 <> fold_example2
R32026:32028 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31989:31992 LF.Poly <> fold def
R32022:32025 LF.Basics <> true constr
R31999:31999 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32004:32004 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32009:32009 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32015:32015 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32020:32020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32000:32003 LF.Basics <> true constr
R32005:32008 LF.Basics <> true constr
R32010:32014 LF.Basics <> false constr
R32016:32019 LF.Basics <> true constr
R31994:31997 LF.Basics <> andb def
R32029:32033 LF.Basics <> false constr
def 32070:32082 <> fold_example3
R32119:32121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32088:32091 LF.Poly <> fold def
R32117:32118 LF.Poly <> :::'['_']' not
R32098:32098 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32102:32102 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32105:32105 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32111:32111 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32115:32115 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32099:32099 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32101:32101 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32103:32104 LF.Poly <> :::'['_']' not
R32106:32106 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32108:32108 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32110:32110 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32112:32112 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32114:32114 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32093:32095 LF.Poly <> app def
R32122:32122 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32124:32124 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32126:32126 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32128:32128 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32130:32130 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 33082:33089 <> constfun
R33105:33105 LF.Poly <> X var
R33113:33116 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33117:33117 LF.Poly <> X var
R33110:33112 Coq.Init.Datatypes <> nat ind
R33131:33133 Coq.Init.Datatypes <> nat ind
R33139:33139 LF.Poly <> x var
def 33154:33158 <> ftrue
R33163:33170 LF.Poly <> constfun def
R33172:33175 LF.Basics <> true constr
def 33187:33203 <> constfun_example1
R33214:33216 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33207:33211 LF.Poly <> ftrue def
R33217:33220 LF.Basics <> true constr
def 33257:33273 <> constfun_example2
R33292:33294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33278:33285 LF.Poly <> constfun def
R33506:33509 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33513:33516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33517:33519 Coq.Init.Datatypes <> nat ind
R33510:33512 Coq.Init.Datatypes <> nat ind
R33503:33505 Coq.Init.Datatypes <> nat ind
R33496:33499 Coq.Init.Peano <> plus syndef
def 34375:34379 <> plus3
R34384:34387 Coq.Init.Peano <> plus syndef
R34409:34412 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34413:34415 Coq.Init.Datatypes <> nat ind
R34406:34408 Coq.Init.Datatypes <> nat ind
R34398:34402 LF.Poly <> plus3 def
def 34427:34436 <> test_plus3
R34450:34452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34443:34447 LF.Poly <> plus3 def
def 34489:34499 <> test_plus3'
R34523:34525 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34505:34514 LF.Poly <> doit3times def
R34516:34520 LF.Poly <> plus3 def
def 34562:34573 <> test_plus3''
R34599:34601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34578:34587 LF.Poly <> doit3times def
R34590:34593 Coq.Init.Peano <> plus syndef
mod 34741:34749 <> Exercises
def 34959:34969 Exercises fold_length
R34987:34990 LF.Poly <> list ind
R34992:34992 LF.Poly <> X var
R34997:34999 Coq.Init.Datatypes <> nat ind
R35006:35009 LF.Poly <> fold def
R35028:35028 LF.Poly <> l var
R35023:35023 Coq.Init.Datatypes <> S constr
R35025:35025 LF.Poly <> n var
def 35042:35058 Exercises test_fold_length1
R35081:35083 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35062:35072 LF.Poly Exercises fold_length def
R35074:35074 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R35076:35076 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R35078:35078 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R35080:35080 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
prf 35406:35424 Exercises fold_length_correct
R35442:35445 LF.Poly <> list ind
R35447:35447 LF.Poly <> X var
R35466:35468 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35453:35463 LF.Poly Exercises fold_length def
R35465:35465 LF.Poly <> l var
R35469:35474 LF.Poly <> length def
R35476:35476 LF.Poly <> l var
R35537:35547 LF.Poly Exercises fold_length def
R35612:35615 LF.Poly <> fold def
R35672:35682 LF.Poly Exercises fold_length def
def 35866:35873 Exercises fold_map
R35892:35895 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35896:35896 LF.Poly <> Y var
R35891:35891 LF.Poly <> X var
R35903:35906 LF.Poly <> list ind
R35908:35908 LF.Poly <> X var
R35913:35916 LF.Poly <> list ind
R35918:35918 LF.Poly <> Y var
R35925:35928 LF.Poly <> fold def
R35954:35955 LF.Poly <> :::'['_']' not
R35952:35952 LF.Poly <> l var
R35940:35942 LF.Poly <> app def
R35944:35944 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R35948:35948 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R35945:35945 LF.Poly <> f var
R35947:35947 LF.Poly <> x var
prf 36209:36224 Exercises fold_map_correct
R36253:36256 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36257:36257 LF.Poly <> Y var
R36252:36252 LF.Poly <> X var
R36265:36268 LF.Poly <> list ind
R36270:36270 LF.Poly <> X var
R36287:36289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36275:36282 LF.Poly Exercises fold_map def
R36286:36286 LF.Poly <> l var
R36284:36284 LF.Poly <> f var
R36290:36292 LF.Poly <> map def
R36296:36296 LF.Poly <> l var
R36294:36294 LF.Poly <> f var
R36357:36364 LF.Poly Exercises fold_map def
R36405:36412 LF.Poly Exercises fold_map def
R36422:36429 LF.Poly Exercises fold_map def
R36449:36452 LF.Poly <> fold def
R36488:36490 LF.Poly <> :::'['_']' not
R36481:36484 LF.Poly <> :::x_'::'_x not
R36468:36470 LF.Poly <> app def
R36472:36472 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R36476:36476 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R36475:36475 LF.Poly <> x var
R36449:36452 LF.Poly <> fold def
R36488:36490 LF.Poly <> :::'['_']' not
R36481:36484 LF.Poly <> :::x_'::'_x not
R36468:36470 LF.Poly <> app def
R36472:36472 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R36476:36476 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R36475:36475 LF.Poly <> x var
def 36593:36617 Exercises manual_grade_for_fold_map
R36621:36626 Coq.Init.Datatypes <> option ind
R36632:36632 LF.Poly <> ::type_scope:x_'*'_x not
R36629:36631 Coq.Init.Datatypes <> nat ind
R36633:36638 Coq.Strings.String <> string ind
R36644:36647 Coq.Init.Datatypes <> None constr
def 37967:37976 Exercises prod_curry
R38005:38008 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38009:38009 LF.Poly <> Z var
R38001:38003 LF.Poly <> ::type_scope:x_'*'_x not
R38000:38000 LF.Poly <> X var
R38004:38004 LF.Poly <> Y var
R38017:38017 LF.Poly <> X var
R38025:38025 LF.Poly <> Y var
R38030:38030 LF.Poly <> Z var
R38035:38035 LF.Poly <> f var
R38037:38037 LF.Poly <> :::'('_x_','_x_')' not
R38039:38040 LF.Poly <> :::'('_x_','_x_')' not
R38042:38042 LF.Poly <> :::'('_x_','_x_')' not
R38038:38038 LF.Poly <> x var
R38041:38041 LF.Poly <> y var
def 38187:38198 Exercises prod_uncurry
R38223:38226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38228:38231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38232:38232 LF.Poly <> Z var
R38227:38227 LF.Poly <> Y var
R38222:38222 LF.Poly <> X var
R38241:38243 LF.Poly <> ::type_scope:x_'*'_x not
R38240:38240 LF.Poly <> X var
R38244:38244 LF.Poly <> Y var
R38249:38249 LF.Poly <> Z var
R38254:38254 LF.Poly <> f var
R38265:38267 LF.Poly <> snd def
R38269:38269 LF.Poly <> p var
R38257:38259 LF.Poly <> fst def
R38261:38261 LF.Poly <> p var
def 38412:38421 Exercises test_map1'
R38444:38446 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38424:38426 LF.Poly <> map def
R38437:38437 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38439:38439 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38441:38441 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38443:38443 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38429:38432 Coq.Init.Peano <> plus syndef
R38447:38447 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38449:38449 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38451:38451 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38453:38453 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38622:38631 LF.Poly Exercises prod_curry def
R38641:38652 LF.Poly Exercises prod_uncurry def
prf 38664:38676 Exercises uncurry_curry
R38732:38735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38737:38740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38741:38741 LF.Poly <> Z var
R38736:38736 LF.Poly <> Y var
R38731:38731 LF.Poly <> X var
R38806:38808 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38775:38784 LF.Poly Exercises prod_curry def
R38805:38805 LF.Poly <> y var
R38803:38803 LF.Poly <> x var
R38787:38798 LF.Poly Exercises prod_uncurry def
R38800:38800 LF.Poly <> f var
R38809:38809 LF.Poly <> f var
R38813:38813 LF.Poly <> y var
R38811:38811 LF.Poly <> x var
R38840:38849 LF.Poly Exercises prod_curry def
R38929:38940 LF.Poly Exercises prod_uncurry def
prf 39072:39084 Exercises curry_uncurry
R39139:39139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39145:39149 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39150:39150 LF.Poly <> Z var
R39141:39143 LF.Poly <> ::type_scope:x_'*'_x not
R39140:39140 LF.Poly <> X var
R39144:39144 LF.Poly <> Y var
R39159:39161 LF.Poly <> ::type_scope:x_'*'_x not
R39158:39158 LF.Poly <> X var
R39162:39162 LF.Poly <> Y var
R39197:39199 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39168:39179 LF.Poly Exercises prod_uncurry def
R39196:39196 LF.Poly <> p var
R39182:39191 LF.Poly Exercises prod_curry def
R39193:39193 LF.Poly <> f var
R39200:39200 LF.Poly <> f var
R39202:39202 LF.Poly <> p var
R39229:39240 LF.Poly Exercises prod_uncurry def
R39358:39367 LF.Poly Exercises prod_curry def
def 40056:40086 Exercises manual_grade_for_informal_proof
R40090:40095 Coq.Init.Datatypes <> option ind
R40101:40101 LF.Poly <> ::type_scope:x_'*'_x not
R40098:40100 Coq.Init.Datatypes <> nat ind
R40102:40107 Coq.Strings.String <> string ind
R40113:40116 Coq.Init.Datatypes <> None constr
mod 40580:40585 <> Exercises.Church
def 40599:40602 Exercises.Church cnat
R40624:40624 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40631:40635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40637:40640 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40641:40641 LF.Poly <> X var
R40636:40636 LF.Poly <> X var
R40626:40629 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40630:40630 LF.Poly <> X var
R40625:40625 LF.Poly <> X var
def 40797:40799 Exercises.Church one
R40803:40806 LF.Poly Exercises.Church cnat def
R40834:40837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40838:40838 LF.Poly <> X var
R40833:40833 LF.Poly <> X var
R40846:40846 LF.Poly <> X var
R40852:40852 LF.Poly <> f var
R40854:40854 LF.Poly <> x var
def 40934:40936 Exercises.Church two
R40940:40943 LF.Poly Exercises.Church cnat def
R40971:40974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40975:40975 LF.Poly <> X var
R40970:40970 LF.Poly <> X var
R40983:40983 LF.Poly <> X var
R40989:40989 LF.Poly <> f var
R40992:40992 LF.Poly <> f var
R40994:40994 LF.Poly <> x var
def 41174:41177 Exercises.Church zero
R41181:41184 LF.Poly Exercises.Church cnat def
R41212:41215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41216:41216 LF.Poly <> X var
R41211:41211 LF.Poly <> X var
R41224:41224 LF.Poly <> X var
R41230:41230 LF.Poly <> x var
def 41593:41597 Exercises.Church three
R41601:41604 LF.Poly Exercises.Church cnat def
R41610:41619 LF.Poly <> doit3times def
def 42011:42015 Exercises.Church zero'
R42019:42022 LF.Poly Exercises.Church cnat def
R42053:42056 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42057:42057 LF.Poly <> X var
R42052:42052 LF.Poly <> X var
R42068:42068 LF.Poly <> X var
R42074:42077 LF.Poly <> zero var
def 42091:42094 Exercises.Church one'
R42098:42101 LF.Poly Exercises.Church cnat def
R42132:42135 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42136:42136 LF.Poly <> X var
R42131:42131 LF.Poly <> X var
R42147:42147 LF.Poly <> X var
R42153:42156 LF.Poly <> succ var
R42158:42161 LF.Poly <> zero var
def 42175:42178 Exercises.Church two'
R42182:42185 LF.Poly Exercises.Church cnat def
R42216:42219 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42220:42220 LF.Poly <> X var
R42215:42215 LF.Poly <> X var
R42231:42231 LF.Poly <> X var
R42237:42240 LF.Poly <> succ var
R42243:42246 LF.Poly <> succ var
R42248:42251 LF.Poly <> zero var
def 42371:42387 Exercises.Church zero_church_peano
R42403:42405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42391:42394 LF.Poly Exercises.Church zero def
R42402:42402 Coq.Init.Datatypes <> O constr
R42400:42400 Coq.Init.Datatypes <> S constr
R42396:42398 Coq.Init.Datatypes <> nat ind
R42423:42426 LF.Poly Exercises.Church zero def
def 42456:42471 Exercises.Church one_church_peano
R42486:42488 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42475:42477 LF.Poly Exercises.Church one def
R42485:42485 Coq.Init.Datatypes <> O constr
R42483:42483 Coq.Init.Datatypes <> S constr
R42479:42481 Coq.Init.Datatypes <> nat ind
R42506:42508 LF.Poly Exercises.Church one def
def 42538:42553 Exercises.Church two_church_peano
R42568:42570 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42557:42559 LF.Poly Exercises.Church two def
R42567:42567 Coq.Init.Datatypes <> O constr
R42565:42565 Coq.Init.Datatypes <> S constr
R42561:42563 Coq.Init.Datatypes <> nat ind
R42588:42590 LF.Poly Exercises.Church two def
def 43635:43637 Exercises.Church scc
R43644:43647 LF.Poly Exercises.Church cnat def
R43652:43655 LF.Poly Exercises.Church cnat def
R43686:43689 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43690:43690 LF.Poly <> X var
R43685:43685 LF.Poly <> X var
R43698:43698 LF.Poly <> X var
R43704:43707 LF.Poly <> succ var
R43710:43710 LF.Poly <> n var
R43719:43719 LF.Poly <> x var
R43714:43717 LF.Poly <> succ var
R43712:43712 LF.Poly <> X var
def 43830:43834 Exercises.Church scc_1
R43846:43848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43838:43840 LF.Poly Exercises.Church scc def
R43842:43845 LF.Poly Exercises.Church zero def
R43849:43851 LF.Poly Exercises.Church one def
R43870:43873 LF.Poly Exercises.Church zero def
R43883:43885 LF.Poly Exercises.Church scc def
R43895:43897 LF.Poly Exercises.Church one def
def 43927:43931 Exercises.Church scc_2
R43942:43944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43935:43937 LF.Poly Exercises.Church scc def
R43939:43941 LF.Poly Exercises.Church one def
R43945:43947 LF.Poly Exercises.Church two def
R43966:43968 LF.Poly Exercises.Church two def
R43978:43980 LF.Poly Exercises.Church one def
R43990:43992 LF.Poly Exercises.Church scc def
def 44152:44156 Exercises.Church scc_3
R44167:44169 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44160:44162 LF.Poly Exercises.Church scc def
R44164:44166 LF.Poly Exercises.Church two def
R44170:44174 LF.Poly Exercises.Church three def
R44193:44195 LF.Poly Exercises.Church two def
R44205:44207 LF.Poly Exercises.Church scc def
R44217:44221 LF.Poly Exercises.Church three def
R44231:44240 LF.Poly <> doit3times def
def 44693:44696 Exercises.Church plus
R44705:44708 LF.Poly Exercises.Church cnat def
R44713:44716 LF.Poly Exercises.Church cnat def
R44747:44750 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44751:44751 LF.Poly <> X var
R44746:44746 LF.Poly <> X var
R44759:44759 LF.Poly <> X var
R44765:44765 LF.Poly <> m var
R44775:44775 LF.Poly <> n var
R44784:44784 LF.Poly <> x var
R44779:44782 LF.Poly <> succ var
R44777:44777 LF.Poly <> X var
R44769:44772 LF.Poly <> succ var
R44767:44767 LF.Poly <> X var
def 44797:44802 Exercises.Church plus_1
R44819:44821 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44806:44809 LF.Poly Exercises.Church plus def
R44816:44818 LF.Poly Exercises.Church one def
R44811:44814 LF.Poly Exercises.Church zero def
R44822:44824 LF.Poly Exercises.Church one def
R44843:44845 LF.Poly Exercises.Church one def
R44855:44858 LF.Poly Exercises.Church zero def
R44868:44871 LF.Poly Exercises.Church plus def
def 44901:44906 Exercises.Church plus_2
R44924:44926 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44910:44913 LF.Poly Exercises.Church plus def
R44919:44923 LF.Poly Exercises.Church three def
R44915:44917 LF.Poly Exercises.Church two def
R44927:44930 LF.Poly Exercises.Church plus def
R44938:44940 LF.Poly Exercises.Church two def
R44932:44936 LF.Poly Exercises.Church three def
R44959:44962 LF.Poly Exercises.Church plus def
R44972:44976 LF.Poly Exercises.Church three def
R44986:44995 LF.Poly <> doit3times def
R45005:45007 LF.Poly Exercises.Church two def
def 45039:45044 Exercises.Church plus_3
R45075:45077 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45050:45053 LF.Poly Exercises.Church plus def
R45070:45074 LF.Poly Exercises.Church three def
R45056:45059 LF.Poly Exercises.Church plus def
R45065:45067 LF.Poly Exercises.Church two def
R45061:45063 LF.Poly Exercises.Church two def
R45078:45081 LF.Poly Exercises.Church plus def
R45088:45091 LF.Poly Exercises.Church plus def
R45099:45103 LF.Poly Exercises.Church three def
R45093:45097 LF.Poly Exercises.Church three def
R45083:45085 LF.Poly Exercises.Church one def
R45141:45144 LF.Poly Exercises.Church plus def
R45147:45149 LF.Poly Exercises.Church scc def
R45151:45154 LF.Poly Exercises.Church zero def
def 45681:45684 Exercises.Church mult
R45693:45696 LF.Poly Exercises.Church cnat def
R45701:45704 LF.Poly Exercises.Church cnat def
R45735:45738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45739:45739 LF.Poly <> X var
R45734:45734 LF.Poly <> X var
R45747:45747 LF.Poly <> X var
R45753:45753 LF.Poly <> m var
R45779:45779 LF.Poly <> x var
R45758:45761 LF.Poly Exercises.Church plus def
R45772:45775 LF.Poly <> succ var
R45770:45770 LF.Poly <> X var
R45768:45768 LF.Poly <> n var
R45763:45766 LF.Poly Exercises.Church zero def
R45755:45755 LF.Poly <> X var
def 45793:45798 Exercises.Church mult_1
R45814:45816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45802:45805 LF.Poly Exercises.Church mult def
R45811:45813 LF.Poly Exercises.Church one def
R45807:45809 LF.Poly Exercises.Church one def
R45817:45819 LF.Poly Exercises.Church one def
R45838:45841 LF.Poly Exercises.Church mult def
R45851:45853 LF.Poly Exercises.Church one def
R45863:45866 LF.Poly Exercises.Church zero def
R45876:45879 LF.Poly Exercises.Church plus def
def 45910:45915 Exercises.Church mult_2
R45947:45949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45919:45922 LF.Poly Exercises.Church mult def
R45930:45933 LF.Poly Exercises.Church plus def
R45941:45945 LF.Poly Exercises.Church three def
R45935:45939 LF.Poly Exercises.Church three def
R45924:45927 LF.Poly Exercises.Church zero def
R45950:45953 LF.Poly Exercises.Church zero def
R45972:45975 LF.Poly Exercises.Church mult def
R46007:46010 LF.Poly Exercises.Church plus def
R46020:46024 LF.Poly Exercises.Church three def
R46034:46043 LF.Poly <> doit3times def
R46055:46058 LF.Poly Exercises.Church zero def
def 46088:46093 Exercises.Church mult_3
R46111:46113 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46097:46100 LF.Poly Exercises.Church mult def
R46106:46110 LF.Poly Exercises.Church three def
R46102:46104 LF.Poly Exercises.Church two def
R46114:46117 LF.Poly Exercises.Church plus def
R46125:46129 LF.Poly Exercises.Church three def
R46119:46123 LF.Poly Exercises.Church three def
R46148:46151 LF.Poly Exercises.Church mult def
R46161:46164 LF.Poly Exercises.Church plus def
R46174:46178 LF.Poly Exercises.Church three def
R46188:46197 LF.Poly <> doit3times def
R46209:46211 LF.Poly Exercises.Church two def
R46221:46224 LF.Poly Exercises.Church zero def
def 46613:46615 Exercises.Church exp
R46624:46627 LF.Poly Exercises.Church cnat def
R46632:46635 LF.Poly Exercises.Church cnat def
R46666:46669 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46670:46670 LF.Poly <> X var
R46665:46665 LF.Poly <> X var
R46678:46678 LF.Poly <> X var
R46684:46684 LF.Poly <> m var
R46723:46723 LF.Poly <> x var
R46711:46713 LF.Poly Exercises.Church one def
R46717:46720 LF.Poly <> succ var
R46715:46715 LF.Poly <> X var
R46696:46699 LF.Poly Exercises.Church mult def
R46707:46707 LF.Poly <> X var
R46705:46705 LF.Poly <> n var
R46701:46703 LF.Poly Exercises.Church one def
R46688:46691 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46692:46692 LF.Poly <> X var
R46687:46687 LF.Poly <> X var
def 46735:46739 Exercises.Church exp_1
R46754:46756 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46743:46745 LF.Poly Exercises.Church exp def
R46751:46753 LF.Poly Exercises.Church two def
R46747:46749 LF.Poly Exercises.Church two def
R46757:46760 LF.Poly Exercises.Church plus def
R46766:46768 LF.Poly Exercises.Church two def
R46762:46764 LF.Poly Exercises.Church two def
R46787:46789 LF.Poly Exercises.Church exp def
R46799:46802 LF.Poly Exercises.Church mult def
R46812:46815 LF.Poly Exercises.Church plus def
R46825:46827 LF.Poly Exercises.Church two def
R46837:46839 LF.Poly Exercises.Church one def
R46851:46854 LF.Poly Exercises.Church zero def
def 46884:46888 Exercises.Church exp_2
R46906:46908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46892:46894 LF.Poly Exercises.Church exp def
R46902:46905 LF.Poly Exercises.Church zero def
R46896:46900 LF.Poly Exercises.Church three def
R46909:46911 LF.Poly Exercises.Church one def
R46930:46932 LF.Poly Exercises.Church exp def
R46942:46944 LF.Poly Exercises.Church one def
R46954:46957 LF.Poly Exercises.Church zero def
def 46987:46991 Exercises.Church exp_3
R47008:47010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46995:46997 LF.Poly Exercises.Church exp def
R47005:47007 LF.Poly Exercises.Church two def
R46999:47003 LF.Poly Exercises.Church three def
R47011:47014 LF.Poly Exercises.Church plus def
R47042:47044 LF.Poly Exercises.Church one def
R47017:47020 LF.Poly Exercises.Church mult def
R47027:47030 LF.Poly Exercises.Church mult def
R47036:47038 LF.Poly Exercises.Church two def
R47032:47034 LF.Poly Exercises.Church two def
R47022:47024 LF.Poly Exercises.Church two def
R47063:47065 LF.Poly Exercises.Church exp def
R47075:47079 LF.Poly Exercises.Church three def
R47089:47098 LF.Poly <> doit3times def
R47108:47111 LF.Poly Exercises.Church mult def
R47123:47126 LF.Poly Exercises.Church zero def
R47136:47139 LF.Poly Exercises.Church plus def
R47149:47151 LF.Poly Exercises.Church one def
R47161:47163 LF.Poly Exercises.Church two def
R47203:47208 LF.Poly Exercises.Church <> mod
R47215:47223 LF.Poly Exercises <> mod
