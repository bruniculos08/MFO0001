DIGEST c8b3dd98c016735b6f212aedbaa75e07
FLF.ImpCEvalFun
R533:535 Coq.micromega.Lia <> <> lib
R562:572 Coq.Arith.Arith <> <> lib
R599:612 Coq.Arith.PeanoNat <> <> lib
R651:661 Coq.Arith.EqNat <> <> lib
R687:689 LF.Imp <> <> lib
R691:694 LF.Maps <> <> lib
def 800:810 <> ceval_step1
R818:822 LF.Imp <> state def
R830:832 LF.Imp <> com ind
R837:841 LF.Imp <> state def
R854:854 LF.ImpCEvalFun <> c var
R867:869 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R874:876 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R870:873 LF.Imp <> :com:com_scope:'skip' not
R889:890 LF.ImpCEvalFun <> st var
R898:900 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R908:910 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R902:905 LF.Imp <> :com:com_scope:x_':='_x not
R925:929 LF.Maps <> :::x_'!->'_x_';'_x not
R941:943 LF.Maps <> :::x_'!->'_x_';'_x not
R944:945 LF.ImpCEvalFun <> st var
R930:934 LF.Imp <> aeval def
R936:937 LF.ImpCEvalFun <> st var
R954:956 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R964:966 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R959:961 LF.Imp <> :com:com_scope:x_';'_x not
R990:1000 LF.ImpCEvalFun <> ceval_step1 def
R1002:1003 LF.ImpCEvalFun <> st var
R1019:1029 LF.ImpCEvalFun <> ceval_step1 def
R1031:1033 LF.ImpCEvalFun <> st' var
R1044:1046 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1071:1073 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1047:1049 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1051:1056 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1059:1064 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1067:1070 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1090:1094 LF.Imp <> beval def
R1096:1097 LF.ImpCEvalFun <> st var
R1150:1160 LF.ImpCEvalFun <> ceval_step1 def
R1162:1163 LF.ImpCEvalFun <> st var
R1117:1127 LF.ImpCEvalFun <> ceval_step1 def
R1129:1130 LF.ImpCEvalFun <> st var
R1174:1176 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1195:1197 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1177:1182 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R1185:1188 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R1191:1194 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R1210:1211 LF.ImpCEvalFun <> st var
def 3224:3234 <> ceval_step2
R3242:3246 LF.Imp <> state def
R3254:3256 LF.Imp <> com ind
R3264:3266 Coq.Init.Datatypes <> nat ind
R3271:3275 LF.Imp <> state def
R3288:3288 LF.ImpCEvalFun <> i var
R3299:3299 Coq.Init.Datatypes <> O constr
R3304:3311 LF.Imp <> empty_st def
R3317:3317 Coq.Init.Datatypes <> S constr
R3335:3335 LF.ImpCEvalFun <> c var
R3350:3352 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3357:3359 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3353:3356 LF.Imp <> :com:com_scope:'skip' not
R3374:3375 LF.ImpCEvalFun <> st var
R3385:3387 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3395:3397 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3389:3392 LF.Imp <> :com:com_scope:x_':='_x not
R3414:3418 LF.Maps <> :::x_'!->'_x_';'_x not
R3430:3432 LF.Maps <> :::x_'!->'_x_';'_x not
R3433:3434 LF.ImpCEvalFun <> st var
R3419:3423 LF.Imp <> aeval def
R3425:3426 LF.ImpCEvalFun <> st var
R3445:3447 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3455:3457 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3450:3452 LF.Imp <> :com:com_scope:x_';'_x not
R3483:3493 LF.ImpCEvalFun <> ceval_step2 def
R3495:3496 LF.ImpCEvalFun <> st var
R3517:3527 LF.ImpCEvalFun <> ceval_step2 def
R3529:3531 LF.ImpCEvalFun <> st' var
R3547:3549 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3574:3576 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3550:3552 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3554:3559 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3562:3567 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3570:3573 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3595:3599 LF.Imp <> beval def
R3601:3602 LF.ImpCEvalFun <> st var
R3662:3672 LF.ImpCEvalFun <> ceval_step2 def
R3674:3675 LF.ImpCEvalFun <> st var
R3624:3634 LF.ImpCEvalFun <> ceval_step2 def
R3636:3637 LF.ImpCEvalFun <> st var
R3691:3693 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3712:3714 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3694:3699 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R3702:3705 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R3708:3711 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R3733:3737 LF.Imp <> beval def
R3739:3740 LF.ImpCEvalFun <> st var
R3847:3848 LF.ImpCEvalFun <> st var
R3772:3782 LF.ImpCEvalFun <> ceval_step2 def
R3784:3785 LF.ImpCEvalFun <> st var
R3811:3821 LF.ImpCEvalFun <> ceval_step2 def
R3827:3827 LF.ImpCEvalFun <> c var
R3823:3825 LF.ImpCEvalFun <> st' var
def 4649:4659 <> ceval_step3
R4667:4671 LF.Imp <> state def
R4679:4681 LF.Imp <> com ind
R4689:4691 Coq.Init.Datatypes <> nat ind
R4716:4721 Coq.Init.Datatypes <> option ind
R4723:4727 LF.Imp <> state def
R4740:4740 LF.ImpCEvalFun <> i var
R4751:4751 Coq.Init.Datatypes <> O constr
R4756:4759 Coq.Init.Datatypes <> None constr
R4765:4765 Coq.Init.Datatypes <> S constr
R4783:4783 LF.ImpCEvalFun <> c var
R4798:4800 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4805:4807 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4801:4804 LF.Imp <> :com:com_scope:'skip' not
R4822:4825 Coq.Init.Datatypes <> Some constr
R4827:4828 LF.ImpCEvalFun <> st var
R4838:4840 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4848:4850 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4842:4845 LF.Imp <> :com:com_scope:x_':='_x not
R4865:4868 Coq.Init.Datatypes <> Some constr
R4872:4876 LF.Maps <> :::x_'!->'_x_';'_x not
R4888:4890 LF.Maps <> :::x_'!->'_x_';'_x not
R4891:4892 LF.ImpCEvalFun <> st var
R4877:4881 LF.Imp <> aeval def
R4883:4884 LF.ImpCEvalFun <> st var
R4903:4905 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4913:4915 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4908:4910 LF.Imp <> :com:com_scope:x_';'_x not
R4937:4947 LF.ImpCEvalFun <> ceval_step3 def
R4949:4950 LF.ImpCEvalFun <> st var
R4976:4979 Coq.Init.Datatypes <> Some constr
R4988:4998 LF.ImpCEvalFun <> ceval_step3 def
R5022:5025 Coq.Init.Datatypes <> None constr
R5030:5033 Coq.Init.Datatypes <> None constr
R5057:5059 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5084:5086 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5060:5062 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5064:5069 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5072:5077 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5080:5083 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5105:5109 LF.Imp <> beval def
R5111:5112 LF.ImpCEvalFun <> st var
R5172:5182 LF.ImpCEvalFun <> ceval_step3 def
R5184:5185 LF.ImpCEvalFun <> st var
R5134:5144 LF.ImpCEvalFun <> ceval_step3 def
R5146:5147 LF.ImpCEvalFun <> st var
R5201:5203 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5222:5224 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5204:5209 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R5212:5215 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R5218:5221 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R5243:5247 LF.Imp <> beval def
R5249:5250 LF.ImpCEvalFun <> st var
R5419:5422 Coq.Init.Datatypes <> Some constr
R5424:5425 LF.ImpCEvalFun <> st var
R5278:5288 LF.ImpCEvalFun <> ceval_step3 def
R5290:5291 LF.ImpCEvalFun <> st var
R5322:5325 Coq.Init.Datatypes <> Some constr
R5334:5344 LF.ImpCEvalFun <> ceval_step3 def
R5350:5350 LF.ImpCEvalFun <> c var
R5372:5375 Coq.Init.Datatypes <> None constr
R5380:5383 Coq.Init.Datatypes <> None constr
R5696:5699 Coq.Init.Datatypes <> Some constr
R5720:5723 Coq.Init.Datatypes <> None constr
R5728:5731 Coq.Init.Datatypes <> None constr
not 5636:5636 <> :::'LETOPT'_x_'<=='_x_'IN'_x
def 5794:5803 <> ceval_step
R5811:5815 LF.Imp <> state def
R5823:5825 LF.Imp <> com ind
R5833:5835 Coq.Init.Datatypes <> nat ind
R5860:5865 Coq.Init.Datatypes <> option ind
R5867:5871 LF.Imp <> state def
R5884:5884 LF.ImpCEvalFun <> i var
R5895:5895 Coq.Init.Datatypes <> O constr
R5900:5903 Coq.Init.Datatypes <> None constr
R5909:5909 Coq.Init.Datatypes <> S constr
R5927:5927 LF.ImpCEvalFun <> c var
R5942:5944 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5949:5951 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5945:5948 LF.Imp <> :com:com_scope:'skip' not
R5966:5969 Coq.Init.Datatypes <> Some constr
R5971:5972 LF.ImpCEvalFun <> st var
R5982:5984 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5992:5994 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5986:5989 LF.Imp <> :com:com_scope:x_':='_x not
R6009:6012 Coq.Init.Datatypes <> Some constr
R6016:6020 LF.Maps <> :::x_'!->'_x_';'_x not
R6032:6034 LF.Maps <> :::x_'!->'_x_';'_x not
R6035:6036 LF.ImpCEvalFun <> st var
R6021:6025 LF.Imp <> aeval def
R6027:6028 LF.ImpCEvalFun <> st var
R6047:6049 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6057:6059 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6052:6054 LF.Imp <> :com:com_scope:x_';'_x not
R6074:6080 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6084:6088 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6108:6121 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6089:6098 LF.ImpCEvalFun <> ceval_step def
R6100:6101 LF.ImpCEvalFun <> st var
R6122:6131 LF.ImpCEvalFun <> ceval_step def
R6133:6135 LF.ImpCEvalFun <> st' var
R6151:6153 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6178:6180 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6154:6156 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6158:6163 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6166:6171 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6174:6177 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6199:6203 LF.Imp <> beval def
R6205:6206 LF.ImpCEvalFun <> st var
R6265:6274 LF.ImpCEvalFun <> ceval_step def
R6276:6277 LF.ImpCEvalFun <> st var
R6228:6237 LF.ImpCEvalFun <> ceval_step def
R6239:6240 LF.ImpCEvalFun <> st var
R6293:6295 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6314:6316 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6296:6301 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R6304:6307 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R6310:6313 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R6335:6339 LF.Imp <> beval def
R6341:6342 LF.ImpCEvalFun <> st var
R6451:6454 Coq.Init.Datatypes <> Some constr
R6456:6457 LF.ImpCEvalFun <> st var
R6363:6369 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6373:6377 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6397:6415 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6378:6387 LF.ImpCEvalFun <> ceval_step def
R6389:6390 LF.ImpCEvalFun <> st var
R6416:6425 LF.ImpCEvalFun <> ceval_step def
R6431:6431 LF.ImpCEvalFun <> c var
R6427:6429 LF.ImpCEvalFun <> st' var
def 6486:6495 <> test_ceval
R6501:6505 LF.Imp <> state def
R6511:6513 LF.Imp <> com ind
R6527:6536 LF.ImpCEvalFun <> ceval_step def
R6541:6541 LF.ImpCEvalFun <> c var
R6538:6539 LF.ImpCEvalFun <> st var
R6556:6559 Coq.Init.Datatypes <> None constr
R6567:6570 Coq.Init.Datatypes <> None constr
R6576:6579 Coq.Init.Datatypes <> Some constr
R6587:6590 Coq.Init.Datatypes <> Some constr
R6592:6592 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6597:6598 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6603:6604 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6609:6609 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6593:6594 LF.ImpCEvalFun <> st var
R6596:6596 LF.Imp <> X def
R6599:6600 LF.ImpCEvalFun <> st var
R6602:6602 LF.Imp <> Y def
R6605:6606 LF.ImpCEvalFun <> st var
R6608:6608 LF.Imp <> Z def
def 6627:6644 <> example_test_ceval
R6764:6772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6653:6662 LF.ImpCEvalFun <> test_ceval def
R6679:6681 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6761:6763 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6688:6697 LF.Imp <> :com:com_scope:x_';'_x not
R6683:6686 LF.Imp <> :com:com_scope:x_':='_x not
R6682:6682 LF.Imp <> X def
R6698:6700 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6709:6722 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6729:6742 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6749:6760 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6701:6701 LF.Imp <> :com:com_scope:'('_x_')' not
R6708:6708 LF.Imp <> :com:com_scope:'('_x_')' not
R6703:6706 LF.Imp <> :com::x_'<='_x not
R6702:6702 LF.Imp <> X def
R6724:6727 LF.Imp <> :com:com_scope:x_':='_x not
R6723:6723 LF.Imp <> Y def
R6744:6747 LF.Imp <> :com:com_scope:x_':='_x not
R6743:6743 LF.Imp <> Z def
R6664:6671 LF.Imp <> empty_st def
R6773:6776 Coq.Init.Datatypes <> Some constr
R6778:6778 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6780:6781 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6783:6784 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6786:6786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 7077:7084 <> pup_to_n
R7088:7090 LF.Imp <> com ind
def 7168:7177 <> pup_to_n_1
R7212:7216 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7183:7192 LF.ImpCEvalFun <> test_ceval def
R7204:7211 LF.ImpCEvalFun <> pup_to_n prfax
R7196:7200 LF.Imp <> :::x_'!->'_x not
R7195:7195 LF.Imp <> X def
R7217:7220 Coq.Init.Datatypes <> Some constr
R7222:7222 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7224:7225 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7228:7229 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7231:7231 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 7884:7900 <> ceval_step__ceval
R7926:7926 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7965:7975 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7978:7981 LF.Imp <> :::x_'=['_x_']=>'_x not
R7983:7987 LF.Imp <> :::x_'=['_x_']=>'_x not
R7982:7982 LF.ImpCEvalFun <> c var
R7976:7977 LF.ImpCEvalFun <> st var
R7988:7990 LF.ImpCEvalFun <> st' var
R7927:7933 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7935:7936 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7954:7956 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7937:7946 LF.ImpCEvalFun <> ceval_step def
R7953:7953 LF.ImpCEvalFun <> i var
R7951:7951 LF.ImpCEvalFun <> c var
R7948:7949 LF.ImpCEvalFun <> st var
R7957:7960 Coq.Init.Datatypes <> Some constr
R7962:7964 LF.ImpCEvalFun <> st' var
R8372:8377 LF.Imp <> E_Skip constr
R8372:8377 LF.Imp <> E_Skip constr
R8403:8408 LF.Imp <> E_Asgn constr
R8403:8408 LF.Imp <> E_Asgn constr
R8459:8468 LF.ImpCEvalFun <> ceval_step def
R8459:8468 LF.ImpCEvalFun <> ceval_step def
R8560:8564 LF.Imp <> E_Seq constr
R8560:8564 LF.Imp <> E_Seq constr
R8768:8772 LF.Imp <> beval def
R8768:8772 LF.Imp <> beval def
R8831:8838 LF.Imp <> E_IfTrue constr
R8831:8838 LF.Imp <> E_IfTrue constr
R8944:8952 LF.Imp <> E_IfFalse constr
R8944:8952 LF.Imp <> E_IfFalse constr
R9047:9051 LF.Imp <> beval def
R9047:9051 LF.Imp <> beval def
R9114:9123 LF.ImpCEvalFun <> ceval_step def
R9114:9123 LF.ImpCEvalFun <> ceval_step def
R9191:9201 LF.Imp <> E_WhileTrue constr
R9191:9201 LF.Imp <> E_WhileTrue constr
R9470:9481 LF.Imp <> E_WhileFalse constr
R9470:9481 LF.Imp <> E_WhileFalse constr
def 10011:10048 <> manual_grade_for_ceval_step__ceval_inf
R10052:10057 Coq.Init.Datatypes <> option ind
R10063:10063 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R10060:10062 Coq.Init.Datatypes <> nat ind
R10064:10069 Coq.Strings.String <> string ind
R10075:10078 Coq.Init.Datatypes <> None constr
prf 10100:10114 <> ceval_step_more
R10150:10155 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10185:10190 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10209:10211 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10191:10200 LF.ImpCEvalFun <> ceval_step def
R10207:10208 LF.ImpCEvalFun <> i2 var
R10205:10205 LF.ImpCEvalFun <> c var
R10202:10203 LF.ImpCEvalFun <> st var
R10212:10215 Coq.Init.Datatypes <> Some constr
R10217:10219 LF.ImpCEvalFun <> st' var
R10174:10176 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10156:10165 LF.ImpCEvalFun <> ceval_step def
R10172:10173 LF.ImpCEvalFun <> i1 var
R10170:10170 LF.ImpCEvalFun <> c var
R10167:10168 LF.ImpCEvalFun <> st var
R10177:10180 Coq.Init.Datatypes <> Some constr
R10182:10184 LF.ImpCEvalFun <> st' var
R10144:10147 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R10142:10143 LF.ImpCEvalFun <> i1 var
R10148:10149 LF.ImpCEvalFun <> i2 var
R10427:10430 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R10427:10430 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R10672:10681 LF.ImpCEvalFun <> ceval_step def
R10672:10681 LF.ImpCEvalFun <> ceval_step def
R11011:11015 LF.Imp <> beval def
R11011:11015 LF.Imp <> beval def
R11138:11142 LF.Imp <> beval def
R11138:11142 LF.Imp <> beval def
R11183:11192 LF.ImpCEvalFun <> ceval_step def
R11183:11192 LF.ImpCEvalFun <> ceval_step def
prf 11710:11726 <> ceval__ceval_step
R11767:11776 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11777:11783 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R11785:11786 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R11804:11806 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11787:11796 LF.ImpCEvalFun <> ceval_step def
R11803:11803 LF.ImpCEvalFun <> i var
R11801:11801 LF.ImpCEvalFun <> c var
R11798:11799 LF.ImpCEvalFun <> st var
R11807:11810 Coq.Init.Datatypes <> Some constr
R11812:11814 LF.ImpCEvalFun <> st' var
R11754:11757 LF.Imp <> :::x_'=['_x_']=>'_x not
R11759:11763 LF.Imp <> :::x_'=['_x_']=>'_x not
R11758:11758 LF.ImpCEvalFun <> c var
R11752:11753 LF.ImpCEvalFun <> st var
R11764:11766 LF.ImpCEvalFun <> st' var
prf 11914:11942 <> ceval_and_ceval_step_coincide
R11983:11989 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11970:11973 LF.Imp <> :::x_'=['_x_']=>'_x not
R11975:11979 LF.Imp <> :::x_'=['_x_']=>'_x not
R11974:11974 LF.ImpCEvalFun <> c var
R11968:11969 LF.ImpCEvalFun <> st var
R11980:11982 LF.ImpCEvalFun <> st' var
R11990:11996 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R11998:11999 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R12017:12019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12000:12009 LF.ImpCEvalFun <> ceval_step def
R12016:12016 LF.ImpCEvalFun <> i var
R12014:12014 LF.ImpCEvalFun <> c var
R12011:12012 LF.ImpCEvalFun <> st var
R12020:12023 Coq.Init.Datatypes <> Some constr
R12025:12027 LF.ImpCEvalFun <> st' var
R12071:12087 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12071:12087 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12096:12112 LF.ImpCEvalFun <> ceval_step__ceval thm
R12096:12112 LF.ImpCEvalFun <> ceval_step__ceval thm
prf 12427:12446 <> ceval_deterministic'
R12491:12499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12515:12523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12527:12529 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12524:12526 LF.ImpCEvalFun <> st1 var
R12530:12532 LF.ImpCEvalFun <> st2 var
R12502:12505 LF.Imp <> :::x_'=['_x_']=>'_x not
R12507:12511 LF.Imp <> :::x_'=['_x_']=>'_x not
R12506:12506 LF.ImpCEvalFun <> c var
R12500:12501 LF.ImpCEvalFun <> st var
R12512:12514 LF.ImpCEvalFun <> st2 var
R12478:12481 LF.Imp <> :::x_'=['_x_']=>'_x not
R12483:12487 LF.Imp <> :::x_'=['_x_']=>'_x not
R12482:12482 LF.ImpCEvalFun <> c var
R12476:12477 LF.ImpCEvalFun <> st var
R12488:12490 LF.ImpCEvalFun <> st1 var
R12581:12597 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12581:12597 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12615:12631 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12615:12631 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12735:12737 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R12705:12719 LF.ImpCEvalFun <> ceval_step_more thm
R12735:12737 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R12705:12719 LF.ImpCEvalFun <> ceval_step_more thm
R12787:12789 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R12757:12771 LF.ImpCEvalFun <> ceval_step_more thm
R12787:12789 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R12757:12771 LF.ImpCEvalFun <> ceval_step_more thm
